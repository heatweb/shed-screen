[
    {
        "id": "5b1a83a41448db32",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b7303474bcc6a601",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "580bb6a3.5dc1d",
        "type": "tab",
        "label": "Heatweb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9ad9f74f.55ef58",
        "type": "tab",
        "label": "Screen",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c376bc72122fb9a2",
        "type": "tab",
        "label": "Connectivity",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d26c3be6.b5ef58",
        "type": "tab",
        "label": "Setup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "caf59ec6.61c85",
        "type": "tab",
        "label": "Software",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca03066f6a7451f4",
        "type": "tab",
        "label": "Sequent BA Temp",
        "disabled": true,
        "info": "Flow for reading NTC10K sensors on 3 BA Hats.",
        "env": []
    },
    {
        "id": "f7fb808af6ec3dfd",
        "type": "tab",
        "label": "Modem",
        "disabled": true,
        "info": ""
    },
    {
        "id": "e17b925905a37026",
        "type": "tab",
        "label": "Data",
        "disabled": true,
        "info": ""
    },
    {
        "id": "d1f3d002.63ee48",
        "type": "subflow",
        "name": "rbe 1m",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "dd19c0de.9bebd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 160,
                "wires": [
                    {
                        "id": "29eae4ad.d68f2c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a8d56bd2.c3c6f",
        "type": "subflow",
        "name": "runScript",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 139,
                "y": 96,
                "wires": [
                    {
                        "id": "469bad72.0a7394"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 830,
                "y": 460,
                "wires": [
                    {
                        "id": "6b7c3cb6.c9c104",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "inputLabels": [
            "Script"
        ],
        "outputLabels": [
            "Completed",
            ""
        ]
    },
    {
        "id": "3d0a40a7.66aa4",
        "type": "subflow",
        "name": "html table",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "790d9c49.fccc04"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 180,
                "wires": [
                    {
                        "id": "790d9c49.fccc04",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "1887c5fb483f5c64",
        "type": "subflow",
        "name": "sequent in",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d24aada4e721da07"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "6bb4ad03.4f4974",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 160,
                "wires": [
                    {
                        "id": "6bb4ad03.4f4974",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "channel",
                "type": "num",
                "value": "1"
            },
            {
                "name": "block",
                "type": "str",
                "value": "universal"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 500,
            "y": 220,
            "wires": [
                {
                    "id": "6bb4ad03.4f4974",
                    "port": 2
                }
            ]
        }
    },
    {
        "id": "b2d492ed.c4def",
        "type": "subflow",
        "name": "rbe 3min",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "ee023f13.5958c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 160,
                "wires": [
                    {
                        "id": "61b66a77.aec334",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "3bcc1796d56e0e4a",
        "type": "subflow",
        "name": "rbe 24h",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "ed3595ba7ad0e4b1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 160,
                "wires": [
                    {
                        "id": "6fdbb2068778d3c9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "344fa160119932f8",
        "type": "subflow",
        "name": "rbe 5m",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "486403111458df8e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 160,
                "wires": [
                    {
                        "id": "c822677b38fcd83c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "dadb5d41.655b1",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#1e7194",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#3037e8",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#d91212",
                    "value": "#3037e8",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#282828",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#141414",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#757af0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#333333",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#454ae8",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 57,
                "sy": 52,
                "gx": 3,
                "gy": 2,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 5
            }
        }
    },
    {
        "id": "550ec543.b55bc4",
        "type": "heatwebConfig",
        "name": "Heatweb Controller zccnohy3nei",
        "description": "Temperature Monitoring - 24xNTC10K",
        "url": "https://hw3.ddns.net",
        "nodeId": "zccnohy3nei",
        "networkId": "queenscross",
        "localNetworkId": "local",
        "localDirectory": "/home/pi/node-hiu",
        "htmlDirectory": "",
        "httpPort": "",
        "httpsKey": "",
        "httpsCert": "",
        "deviceType": "",
        "adminPassword": "",
        "guestPassword": "",
        "loadBoot": true
    },
    {
        "id": "888f4ceb.4b158",
        "type": "ui_tab",
        "name": "Setup",
        "icon": "fa-cog",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cb203bcb.f1ec68",
        "type": "ui_group",
        "name": "DefaultSetup",
        "tab": "888f4ceb.4b158",
        "order": 1,
        "disp": false,
        "width": "9",
        "collapse": false
    },
    {
        "id": "ee34b8ab.222b68",
        "type": "ui_group",
        "name": "MQTT Data ",
        "tab": "c6a43c18.30063",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "8ef017d0.9a0628",
        "type": "ui_group",
        "name": "MenuReadings",
        "tab": "c6a43c18.30063",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "43af1847.935fd8",
        "type": "ui_group",
        "name": "Default",
        "tab": "c6a43c18.30063",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c6a43c18.30063",
        "type": "ui_tab",
        "name": "Readings",
        "icon": "fa-table",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "31ddf4e3.0519dc",
        "type": "ui_group",
        "name": "Default",
        "tab": "4d7ab312.a67afc",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "4d7ab312.a67afc",
        "type": "ui_tab",
        "name": "Graph",
        "icon": "fa-line-chart",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "db644eb4.b9d0a",
        "type": "ui_group",
        "name": "M",
        "tab": "ad9b32d2.b3054",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ad9b32d2.b3054",
        "type": "ui_tab",
        "name": "Browser",
        "icon": "fa-line-chart",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "36b47e47.04f1c2",
        "type": "ui_group",
        "name": "Buttons",
        "tab": "888f4ceb.4b158",
        "order": 2,
        "disp": false,
        "width": "3",
        "collapse": false
    },
    {
        "id": "c982fbb8.1deb38",
        "type": "ui_group",
        "name": "hidden_group",
        "tab": "7c447e96.4b96a",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c447e96.4b96a",
        "type": "ui_tab",
        "name": "Zooland Sys",
        "icon": "home",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "10aaba68.e21626",
        "type": "ui_tab",
        "name": "Browser",
        "icon": "fa-chrome",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e6210b42.32c588",
        "type": "ui_group",
        "name": "Browser",
        "tab": "10aaba68.e21626",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d9e45e.bcd50ba",
        "type": "ui_group",
        "name": "Radial Gauges",
        "tab": "e625ce36.34cf3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e625ce36.34cf3",
        "type": "ui_tab",
        "name": "Widgets",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "07c35ea8fb94a2fc",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB2",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "b77843a6.57d18",
        "type": "ui_group",
        "name": "Modem AT Interface",
        "tab": "c8185974.465238",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c8185974.465238",
        "type": "ui_tab",
        "name": "Modem",
        "icon": "fa-signal",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7ad2997b.42a908",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a1a40c5149c84832",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "heatweb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "https://europe-west1-1.gcp.cloud2.influxdata.com",
        "rejectUnauthorized": true
    },
    {
        "id": "0848078fbac07f0d",
        "type": "ui_tab",
        "name": "Control",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fadb2d2a96688f44",
        "type": "ui_group",
        "name": "Central Heating",
        "tab": "0848078fbac07f0d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c960aa49a94e0ae",
        "type": "ui_group",
        "name": "Schedules",
        "tab": "0848078fbac07f0d",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5373bbe4ef7628e",
        "type": "ui_group",
        "name": "Room Settings",
        "tab": "0848078fbac07f0d",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d247ca56d6c7032c",
        "type": "ui_group",
        "name": "Heat Pump",
        "tab": "0848078fbac07f0d",
        "order": 4,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dd19c0de.9bebd",
        "type": "rbe",
        "z": "d1f3d002.63ee48",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "29eae4ad.d68f2c"
            ]
        ]
    },
    {
        "id": "8b22fc2a.83d07",
        "type": "inject",
        "z": "d1f3d002.63ee48",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "dd19c0de.9bebd"
            ]
        ]
    },
    {
        "id": "29eae4ad.d68f2c",
        "type": "switch",
        "z": "d1f3d002.63ee48",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "eb92fac.cb1f108",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo bash /home/pi/node-hiu/addmqttacl.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 246.2857208251953,
        "y": 418.28569984436035,
        "wires": [
            [
                "6b7c3cb6.c9c104"
            ],
            [],
            []
        ]
    },
    {
        "id": "ef9bf9d9.e12f28",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo chown root:node-red /home/pi/node-hiu/addmqttacl.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 296.2857208251953,
        "y": 298.28569984436035,
        "wires": [
            [
                "47ddca7f.78036c"
            ],
            [],
            []
        ]
    },
    {
        "id": "47ddca7f.78036c",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo chmod 755 /home/pi/node-hiu/addmqttacl.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 266.2857208251953,
        "y": 358.28569984436035,
        "wires": [
            [
                "eb92fac.cb1f108"
            ],
            [],
            []
        ]
    },
    {
        "id": "6b7c3cb6.c9c104",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo mv /home/pi/node-hiu/addmqttacl.sh /home/pi/node-hiu/_lastrun.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 336.2857208251953,
        "y": 478.28569984436035,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5ee23677.67d8e",
        "type": "file",
        "z": "a8d56bd2.c3c6f",
        "name": "",
        "filename": "/home/pi/node-hiu/addmqttacl.sh",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 540,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "59609ed4.bee04",
        "type": "delay",
        "z": "a8d56bd2.c3c6f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 126.28572082519531,
        "y": 238.28569984436035,
        "wires": [
            [
                "ef9bf9d9.e12f28"
            ]
        ]
    },
    {
        "id": "469bad72.0a7394",
        "type": "trigger",
        "z": "a8d56bd2.c3c6f",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 279,
        "y": 96,
        "wires": [
            [
                "5ee23677.67d8e",
                "59609ed4.bee04"
            ]
        ]
    },
    {
        "id": "790d9c49.fccc04",
        "type": "function",
        "z": "3d0a40a7.66aa4",
        "name": "htmltable",
        "func": "var htmlt = '<table width=\"100%\">';\n\nfor (var key in msg.payload) {\n    \n    \n    htmlt += '<tr><td>' + key.replace(/_/g, ' ') + '</td><td align=\"right\">' + msg.payload[key] + '</td></tr>';\n}\n\nhtmlt += '<table>';\n\nmsg.payload=htmlt;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6bb4ad03.4f4974",
        "type": "function",
        "z": "1887c5fb483f5c64",
        "name": "",
        "func": "\nvar io = global.get(\"io\");\nio = io[msg.block+\"\"+msg.channel];\n\nvar msg1={\"payload\":\"1\"}\nif (!io) {\n    \n    return [null,msg1,msg3];\n}\n\nmsg.io = io;\n\nvar msg3 = {};\nmsg3.payload = msg.channel + \":  \" + io[\"type\"];\n\n\nif(io[\"type\"].indexOf(\"PULSE\")>-1) { msg.payload =  \"countrd\"; }\n\nelse if(io[\"type\"].indexOf(\"10K\")>-1) { \n    \n    if(msg.block==\"universal\") {   msg.payload =  \"r10krd\";  }\n    else {  msg.payload =  \"rthrd\";    msg.payload =  \"rthrd\"; }\n    \n}\n\nelse if(io[\"type\"].indexOf(\"10V\")>-1) { msg.payload =  \"adcrd\"; }\n\n\nelse { \n    \n    msg1={\"payload\":\"1\"}\n    return [null,msg1,msg3];\n    \n    \n}\n\n// address & channel\n//msg.payload =  msg.board + \" \" +  msg.payload + \" \" + msg.channel;\nmsg.payload =  msg.payload + \" \" + msg.channel;\n\nreturn [msg,null,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d24aada4e721da07",
        "type": "change",
        "z": "1887c5fb483f5c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "channel",
                "pt": "msg",
                "to": "channel",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "block",
                "pt": "msg",
                "to": "block",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "6bb4ad03.4f4974"
            ]
        ]
    },
    {
        "id": "61b66a77.aec334",
        "type": "switch",
        "z": "b2d492ed.c4def",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "23f9ad60.8b4b82",
        "type": "change",
        "z": "b2d492ed.c4def",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "ee023f13.5958c"
            ]
        ]
    },
    {
        "id": "44580c0c.eb7c04",
        "type": "inject",
        "z": "b2d492ed.c4def",
        "name": "",
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "23f9ad60.8b4b82"
            ]
        ]
    },
    {
        "id": "ee023f13.5958c",
        "type": "rbe",
        "z": "b2d492ed.c4def",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "61b66a77.aec334"
            ]
        ]
    },
    {
        "id": "ed3595ba7ad0e4b1",
        "type": "rbe",
        "z": "3bcc1796d56e0e4a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "6fdbb2068778d3c9"
            ]
        ]
    },
    {
        "id": "ac6886f7de81d7ca",
        "type": "inject",
        "z": "3bcc1796d56e0e4a",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 60,
        "wires": [
            [
                "ed3595ba7ad0e4b1"
            ]
        ]
    },
    {
        "id": "6fdbb2068778d3c9",
        "type": "switch",
        "z": "3bcc1796d56e0e4a",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "486403111458df8e",
        "type": "rbe",
        "z": "344fa160119932f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "c822677b38fcd83c"
            ]
        ]
    },
    {
        "id": "9dd86fca5dcbfcab",
        "type": "inject",
        "z": "344fa160119932f8",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "486403111458df8e"
            ]
        ]
    },
    {
        "id": "c822677b38fcd83c",
        "type": "switch",
        "z": "344fa160119932f8",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f09d9c6fd472bb88",
        "type": "exec",
        "z": "5b1a83a41448db32",
        "command": "lt --port 1880 --subdomain swanseashed-zccnoh9fah3-nodered",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "3aad3abf888fc4c3"
            ],
            [
                "b47b95bfcb149d31"
            ],
            [
                "56727e5360cd5ed8"
            ]
        ]
    },
    {
        "id": "3aad3abf888fc4c3",
        "type": "debug",
        "z": "5b1a83a41448db32",
        "name": "debug 94",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 220,
        "wires": []
    },
    {
        "id": "b47b95bfcb149d31",
        "type": "debug",
        "z": "5b1a83a41448db32",
        "name": "debug 95",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 260,
        "wires": []
    },
    {
        "id": "0a4b5bd44ee826b5",
        "type": "inject",
        "z": "5b1a83a41448db32",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "f09d9c6fd472bb88"
            ]
        ]
    },
    {
        "id": "56727e5360cd5ed8",
        "type": "delay",
        "z": "5b1a83a41448db32",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 480,
        "wires": [
            [
                "f09d9c6fd472bb88"
            ]
        ]
    },
    {
        "id": "f61243a955127483",
        "type": "inject",
        "z": "5b1a83a41448db32",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 80,
        "wires": [
            [
                "c5ab1a8d880c13d7"
            ]
        ]
    },
    {
        "id": "c5ab1a8d880c13d7",
        "type": "exec",
        "z": "5b1a83a41448db32",
        "command": "sudo npm install -g localtunnel",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "abaed603baa90734"
            ],
            [
                "abaed603baa90734"
            ],
            []
        ]
    },
    {
        "id": "abaed603baa90734",
        "type": "debug",
        "z": "5b1a83a41448db32",
        "name": "debug 103",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "c0e95319754e64d3",
        "type": "inject",
        "z": "5b1a83a41448db32",
        "name": "kill",
        "props": [
            {
                "p": "kill",
                "v": "SIGTERM",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "f09d9c6fd472bb88"
            ]
        ]
    },
    {
        "id": "4e215384bc938e44",
        "type": "inject",
        "z": "5b1a83a41448db32",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 600,
        "wires": [
            [
                "dd6cf3429647690b"
            ]
        ]
    },
    {
        "id": "dd6cf3429647690b",
        "type": "http request",
        "z": "5b1a83a41448db32",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://icanhazip.com/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 600,
        "wires": [
            [
                "24166115994eb3f6"
            ]
        ]
    },
    {
        "id": "24166115994eb3f6",
        "type": "debug",
        "z": "5b1a83a41448db32",
        "name": "debug 106",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "b00d27e11c01ca0b",
        "type": "ui_time_scheduler",
        "z": "b7303474bcc6a601",
        "group": "7c960aa49a94e0ae",
        "name": "",
        "startDay": "1",
        "refresh": 60,
        "devices": [
            "Master",
            "Room 101",
            "Room 102",
            "Room 103",
            "Room 104",
            "Room 105",
            "Room 106",
            "Room 107",
            "Room 108",
            "Room 109",
            "Room 110",
            "Room 111",
            "Room 112",
            "Room 113",
            "Room 114",
            "Room 115",
            "Room 116",
            "Room 117",
            "Room 118 (Kitchen)"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": false,
        "eventMode": false,
        "eventOptions": [],
        "sendTopic": false,
        "lat": "",
        "lon": "",
        "customContextStore": "",
        "outputs": 20,
        "order": 0,
        "width": "12",
        "height": "8",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "158be4f268bad9fe",
                "b2eb8c1110030f5d"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "158be4f268bad9fe",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "schedules",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "htg/set/schedule",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 660,
        "wires": [
            [
                "1a05c3d782aeacd6"
            ]
        ]
    },
    {
        "id": "1a05c3d782aeacd6",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 805,
        "y": 660,
        "wires": []
    },
    {
        "id": "b2eb8c1110030f5d",
        "type": "debug",
        "z": "b7303474bcc6a601",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 720,
        "wires": []
    },
    {
        "id": "52f539e079d737e1",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "Settings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "deviceSettings.htg.schedule.value",
        "payloadType": "global",
        "x": 220,
        "y": 780,
        "wires": [
            [
                "b00d27e11c01ca0b"
            ]
        ]
    },
    {
        "id": "507118e25473eabf",
        "type": "ui_numeric",
        "z": "b7303474bcc6a601",
        "name": "",
        "label": "Default Room Temperature",
        "tooltip": "",
        "group": "fadb2d2a96688f44",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "htg/set/tRoomDefault",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": "15",
        "max": "25",
        "step": "0.5",
        "className": "",
        "x": 1020,
        "y": 960,
        "wires": [
            [
                "372008afcbdf4aa1"
            ]
        ]
    },
    {
        "id": "372008afcbdf4aa1",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1225,
        "y": 960,
        "wires": []
    },
    {
        "id": "66cc6097ad3af466",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "Settings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "deviceSettings.htg.tRoomDefault.value",
        "payloadType": "global",
        "x": 800,
        "y": 960,
        "wires": [
            [
                "507118e25473eabf"
            ]
        ]
    },
    {
        "id": "81233d53ad2d8489",
        "type": "ui_numeric",
        "z": "b7303474bcc6a601",
        "name": "",
        "label": "Minimum Set Temperature",
        "tooltip": "",
        "group": "fadb2d2a96688f44",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "htg/set/tRoomSetMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": "15",
        "max": "19",
        "step": "0.5",
        "className": "",
        "x": 1020,
        "y": 1040,
        "wires": [
            [
                "81682f7b343bd9f0"
            ]
        ]
    },
    {
        "id": "81682f7b343bd9f0",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1225,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fd153cc83dc61846",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "Settings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "deviceSettings.htg.tRoomSetMin.value",
        "payloadType": "global",
        "x": 800,
        "y": 1040,
        "wires": [
            [
                "81233d53ad2d8489"
            ]
        ]
    },
    {
        "id": "6bf45dc3664b10e2",
        "type": "ui_numeric",
        "z": "b7303474bcc6a601",
        "name": "",
        "label": "Maximum Set Temperature",
        "tooltip": "",
        "group": "fadb2d2a96688f44",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "htg/set/tRoomSetMax",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": "19",
        "max": "30",
        "step": "0.5",
        "className": "",
        "x": 1020,
        "y": 1120,
        "wires": [
            [
                "35cbcd0f2f42458d"
            ]
        ]
    },
    {
        "id": "35cbcd0f2f42458d",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1225,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6aa26e9761405a24",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "Settings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "deviceSettings.htg.tRoomSetMax.value",
        "payloadType": "global",
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "6bf45dc3664b10e2"
            ]
        ]
    },
    {
        "id": "3d037d6f1164b115",
        "type": "ui_switch",
        "z": "b7303474bcc6a601",
        "name": "",
        "label": "CO2 Occupancy Detection",
        "tooltip": "",
        "group": "fadb2d2a96688f44",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "htg/set/enableOccupancy",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1020,
        "y": 1200,
        "wires": [
            [
                "10a108e167fe783e"
            ]
        ]
    },
    {
        "id": "10a108e167fe783e",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1225,
        "y": 1200,
        "wires": []
    },
    {
        "id": "f97d1083485a473e",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "Settings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "deviceSettings.htg.enableOccupancy.value",
        "payloadType": "global",
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "3d037d6f1164b115"
            ]
        ]
    },
    {
        "id": "6fc9866893513c71",
        "type": "ui_dropdown",
        "z": "b7303474bcc6a601",
        "name": "",
        "label": "Operation Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "fadb2d2a96688f44",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Timed",
                "value": "timed",
                "type": "str"
            },
            {
                "label": "On",
                "value": "on",
                "type": "str"
            },
            {
                "label": "Off (exc.frost)",
                "value": "off",
                "type": "str"
            },
            {
                "label": "All Off",
                "value": "alloff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "htg/set/runMode",
        "topicType": "str",
        "className": "",
        "x": 980,
        "y": 1280,
        "wires": [
            [
                "b283569095517dfa"
            ]
        ]
    },
    {
        "id": "9d5b8364465f55cb",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "Settings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "deviceSettings.htg.runMode.value",
        "payloadType": "global",
        "x": 780,
        "y": 1280,
        "wires": [
            [
                "6fc9866893513c71"
            ]
        ]
    },
    {
        "id": "b283569095517dfa",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1225,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5ffdc01a1f06c3e6",
        "type": "ui_etable",
        "z": "b7303474bcc6a601",
        "payload": "[{\"title\":\"Room\",\"field\":\"room\",\"width\":150},{\"title\":\"Name\",\"field\":\"roomname\",\"width\":180,\"editor\":true},{\"title\":\"Run Mode\",\"field\":\"runMode\",\"width\":180,\"editor\":\"select\",\"editorParams\":{\"values\":[\"timed\",\"constant\",\"occupancy\",\"historic\",\"off\"]}},{\"title\":\"Control Mode\",\"field\":\"controlMode\",\"width\":180,\"editor\":\"select\",\"editorParams\":{\"values\":[\"default\",\"user\",\"setback\"]}},{\"title\":\"Setpoint [C]\",\"field\":\"tSetDefault\",\"width\":120,\"align\":\"center\",\"sorter\":\"number\",\"editor\":true},{\"title\":\"Setback [C]\",\"field\":\"tSetBack\",\"width\":120,\"align\":\"center\",\"sorter\":\"number\",\"editor\":true},{\"title\":\"Start\",\"field\":\"start\",\"width\":120,\"align\":\"center\",\"editor\":true},{\"title\":\"Stop\",\"field\":\"stop\",\"width\":120,\"align\":\"center\",\"editor\":true},{\"title\":\"Fan Low Speed [%]\",\"field\":\"fanLow\",\"width\":120,\"align\":\"center\",\"sorter\":\"number\",\"editor\":true},{\"title\":\"Fan High Speed [%]\",\"field\":\"fanHigh\",\"width\":120,\"align\":\"center\",\"sorter\":\"number\",\"editor\":true}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"resizableColumns\":true,\"selectable\":5,\"responsiveLayout\":\"collapse\",\"autoResize\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"800px\",\"groupBy\":\"system\",\"groupStartOpen\":true}",
        "group": "c5373bbe4ef7628e",
        "name": "",
        "order": 0,
        "width": "24",
        "height": "12",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "7cf56887e0942d2e",
                "1191653d1ba10ed6"
            ]
        ]
    },
    {
        "id": "4a2aaa987c282c45",
        "type": "ui_template",
        "z": "b7303474bcc6a601",
        "group": "fadb2d2a96688f44",
        "name": "",
        "order": 5,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "b7b66baab77be18b",
        "type": "ui_ui_control",
        "z": "b7303474bcc6a601",
        "name": "",
        "events": "change",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "755bfca29a54e6f2",
                "c190b4a0dc1f794e",
                "eb336d5478f34143"
            ]
        ]
    },
    {
        "id": "755bfca29a54e6f2",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "deviceSettings.htg.schedule.value",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 720,
        "wires": [
            [
                "b00d27e11c01ca0b"
            ]
        ]
    },
    {
        "id": "03e8fae0cf2d0dfd",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"room\":\"101\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"102\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"103\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"104\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"105\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"106\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"107\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"108\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"109\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"110\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"111\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"112\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"113\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"114\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"115\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"116\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"117\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"},{\"room\":\"118\",\"runMode\":\"on\",\"controlMode\":\"default\",\"tSetDefault\":\"21\",\"tSetBack\":\"16\"}]",
        "payloadType": "json",
        "x": 590,
        "y": 280,
        "wires": [
            [
                "5ffdc01a1f06c3e6"
            ]
        ]
    },
    {
        "id": "7cf56887e0942d2e",
        "type": "debug",
        "z": "b7303474bcc6a601",
        "name": "debug 104",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "a201c040b5b21b3f",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1335,
        "y": 280,
        "wires": []
    },
    {
        "id": "1191653d1ba10ed6",
        "type": "function",
        "z": "b7303474bcc6a601",
        "name": "function 1",
        "func": "msg.topic = \"htg/set/usersettings\";\nmsg.payload = JSON.stringify(msg.options.data);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 280,
        "wires": [
            [
                "a201c040b5b21b3f",
                "5e23fbbaa269cc9d"
            ]
        ]
    },
    {
        "id": "5e23fbbaa269cc9d",
        "type": "delay",
        "z": "b7303474bcc6a601",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1010,
        "y": 340,
        "wires": [
            [
                "892d65fabb3b510a"
            ]
        ]
    },
    {
        "id": "892d65fabb3b510a",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "local/+/htg/settings/#",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "cmd/request",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "a201c040b5b21b3f"
            ]
        ]
    },
    {
        "id": "f3b59df445993094",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "892d65fabb3b510a"
            ]
        ]
    },
    {
        "id": "fe4c4948cc87a394",
        "type": "mqtt in",
        "z": "b7303474bcc6a601",
        "name": "",
        "topic": "local/+/htg/settings/usersettings",
        "qos": "0",
        "datatype": "json",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 750,
        "y": 100,
        "wires": [
            [
                "836bae9cc5182a4c"
            ]
        ]
    },
    {
        "id": "836bae9cc5182a4c",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "usersettings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c190b4a0dc1f794e",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "usersettings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 220,
        "wires": [
            [
                "5ffdc01a1f06c3e6"
            ]
        ]
    },
    {
        "id": "3411e71d5cba116a",
        "type": "ui_template",
        "z": "b7303474bcc6a601",
        "group": "fadb2d2a96688f44",
        "name": "Virtual Keyboard",
        "order": 6,
        "width": "1",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 220,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f8015a540b94a073",
        "type": "ui_etable",
        "z": "b7303474bcc6a601",
        "payload": "[{\"title\":\"Outside Air Temperature [°C]\",\"field\":\"oat\",\"align\":\"center\",\"sorter\":\"number\",\"width\":300},{\"title\":\"Heat Pump Out Temperature [Volts]\",\"field\":\"voltage\",\"align\":\"center\",\"sorter\":\"number\",\"width\":300,\"editor\":true}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"resizableColumns\":true,\"selectable\":5,\"responsiveLayout\":\"collapse\",\"autoResize\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"800px\",\"groupBy\":\"system\",\"groupStartOpen\":true}",
        "group": "d247ca56d6c7032c",
        "name": "",
        "order": 0,
        "width": "24",
        "height": "8",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 810,
        "y": 520,
        "wires": [
            [
                "f09c9ac26a3d1fb0",
                "2c18b3bd58873692"
            ]
        ]
    },
    {
        "id": "b5d6947bea983777",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"oat\":\"-5\",\"voltage\":\"9\"},{\"oat\":\"0\",\"voltage\":\"8\"},{\"oat\":\"5\",\"voltage\":\"7.5\"},{\"oat\":\"10\",\"voltage\":\"6.5\"},{\"oat\":\"15\",\"voltage\":\"6\"},{\"oat\":\"20\",\"voltage\":\"6\"},{\"oat\":\"25\",\"voltage\":\"6\"}]",
        "payloadType": "json",
        "x": 590,
        "y": 520,
        "wires": [
            [
                "f8015a540b94a073"
            ]
        ]
    },
    {
        "id": "f09c9ac26a3d1fb0",
        "type": "debug",
        "z": "b7303474bcc6a601",
        "name": "debug 107",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 460,
        "wires": []
    },
    {
        "id": "1412e0740d21f42a",
        "type": "link out",
        "z": "b7303474bcc6a601",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1335,
        "y": 520,
        "wires": []
    },
    {
        "id": "2c18b3bd58873692",
        "type": "function",
        "z": "b7303474bcc6a601",
        "name": "function 2",
        "func": "msg.topic = \"heatpump/set/tOutSettings\";\nmsg.payload = JSON.stringify(msg.options.data);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 520,
        "wires": [
            [
                "1412e0740d21f42a",
                "1eda801cbca0c5ca"
            ]
        ]
    },
    {
        "id": "1eda801cbca0c5ca",
        "type": "delay",
        "z": "b7303474bcc6a601",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "30f45d4695781e55"
            ]
        ]
    },
    {
        "id": "30f45d4695781e55",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "local/+/heatpump/settings/#",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "cmd/request",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "1412e0740d21f42a"
            ]
        ]
    },
    {
        "id": "a84e1c7fbb1b3dbe",
        "type": "inject",
        "z": "b7303474bcc6a601",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1010,
        "y": 640,
        "wires": [
            [
                "30f45d4695781e55"
            ]
        ]
    },
    {
        "id": "eb336d5478f34143",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tOutSettings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 460,
        "wires": [
            [
                "f8015a540b94a073"
            ]
        ]
    },
    {
        "id": "825ac2749536341c",
        "type": "mqtt in",
        "z": "b7303474bcc6a601",
        "name": "",
        "topic": "local/+/heatpump/settings/tOutSettings",
        "qos": "0",
        "datatype": "json",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 970,
        "y": 720,
        "wires": [
            [
                "cdf49775b8a52bdd"
            ]
        ]
    },
    {
        "id": "cdf49775b8a52bdd",
        "type": "change",
        "z": "b7303474bcc6a601",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tOutSettings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c4ae8968.68a538",
        "type": "heatwebNode",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "nodeConfig": "550ec543.b55bc4",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "e2a5359d.ef1ea"
            ]
        ]
    },
    {
        "id": "81452df3.f1e0b8",
        "type": "heatwebRemote",
        "z": "580bb6a3.5dc1d",
        "d": true,
        "name": "",
        "nodeConfig": "550ec543.b55bc4",
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "e2a5359d.ef1ea"
            ]
        ]
    },
    {
        "id": "6db74d6.e025e34",
        "type": "heatwebFilter",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "nodeConfig": "550ec543.b55bc4",
        "resetEvery": "60",
        "defaultGroup": "dat",
        "defaultPoints": "10",
        "deadband": "",
        "storeHistoricEx": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "8b488cbb14b093cb",
                "5794e74d.4504f8",
                "de5cbb28.0bca7"
            ],
            [
                "f7abd73e.da268",
                "16d3ed6.1101e13",
                "6ed780fa.52d71",
                "5794e74d.4504f8"
            ]
        ]
    },
    {
        "id": "72fc070f.39dd8",
        "type": "link in",
        "z": "580bb6a3.5dc1d",
        "name": "handler",
        "links": [
            "e2a5359d.ef1ea",
            "296debf8.d54624",
            "dccb789b.a3499",
            "a8d7bac.0f6fbc8",
            "ae865c20.2fec3",
            "cfc9202e.f210d8",
            "acd796d4.015d48",
            "491f0ea6.f770b",
            "9a1d4893.b22ed8",
            "32f9b18e.982aee",
            "25d0fd81.1972e2",
            "c7f36015.8ce9f",
            "e44a91c9.939dc",
            "54651d5b.108064",
            "ed0a2c14.1c501",
            "6ce87828.9e4298",
            "d30d586c.915748",
            "c0a0bdc5.f60f3",
            "a1c82691.72a528",
            "4383d483.c5616c",
            "2b500c07ee3ffae7",
            "4a837d4dcc6ad59d",
            "4c2623596b85456b",
            "1e2c3dc4f1a6d2b4",
            "c7c3bbe3c8fd890c",
            "1e7605b26f46c401",
            "08d37f854e265fcf",
            "3b8abba47b97affa",
            "a70869c7c01cbeaf",
            "bd7d48d62f53c173",
            "c319a36a810036dd",
            "392d126135d185ae",
            "0a7561544c78863d",
            "e162d709.82b3",
            "c52dea4958c2f7ea",
            "110e496a3bb255d1",
            "1dab6e911927df71",
            "10ee4216045b7731",
            "5518353d16a35f62",
            "1d8ef88d8c83d435",
            "ca1358f93e7b6dc8",
            "da6da2d1c0e082f0",
            "f35f2c270fa6bc6f",
            "26f1ad336f82aeeb",
            "1a05c3d782aeacd6",
            "372008afcbdf4aa1",
            "81682f7b343bd9f0",
            "35cbcd0f2f42458d",
            "10a108e167fe783e",
            "b283569095517dfa",
            "a201c040b5b21b3f",
            "1412e0740d21f42a"
        ],
        "x": 205,
        "y": 180,
        "wires": [
            [
                "6db74d6.e025e34"
            ]
        ]
    },
    {
        "id": "e2a5359d.ef1ea",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1195,
        "y": 160,
        "wires": []
    },
    {
        "id": "5794e74d.4504f8",
        "type": "mqtt out",
        "z": "580bb6a3.5dc1d",
        "name": "No Retain",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7ad2997b.42a908",
        "x": 620,
        "y": 180,
        "wires": []
    },
    {
        "id": "f7abd73e.da268",
        "type": "switch",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/xnode",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/cmd/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/set/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "json/sync",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 610,
        "y": 320,
        "wires": [
            [],
            [],
            [],
            [
                "4a7695e79d88af15"
            ],
            [
                "adae7e8a.85a74",
                "4a7695e79d88af15"
            ]
        ]
    },
    {
        "id": "adae7e8a.85a74",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "mode": "link",
        "links": [
            "32c4125311d8d4a0"
        ],
        "x": 735,
        "y": 360,
        "wires": []
    },
    {
        "id": "32f9b18e.982aee",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 455,
        "y": 480,
        "wires": []
    },
    {
        "id": "4a7b0367.1dda1c",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/net_1_ip4",
        "payloadType": "str",
        "x": 220,
        "y": 560,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "16d3ed6.1101e13",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "10199216.12d03e",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/net_2_ip4",
        "payloadType": "str",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "db6ad2fe.19c03",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/mem_total",
        "payloadType": "str",
        "x": 220,
        "y": 640,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "68804932.313de8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/mem_free",
        "payloadType": "str",
        "x": 220,
        "y": 680,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "6ed780fa.52d71",
        "type": "switch",
        "z": "580bb6a3.5dc1d",
        "name": "Only Requests",
        "property": "mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "request",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 420,
        "wires": [
            [
                "69cac137.62091"
            ]
        ]
    },
    {
        "id": "69cac137.62091",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "ed00b81b.500ff8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/dat/#",
        "payloadType": "str",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "170c616c.8b5bef",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/fs_0_use",
        "payloadType": "str",
        "x": 220,
        "y": 720,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "ba62991c.c36168",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "400",
        "topic": "cmd/request",
        "payload": "local/+/+/system/#",
        "payloadType": "str",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "30eb37b6.547d88",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/upTime",
        "payloadType": "str",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "679a6694.f7bfc8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/upTimeH",
        "payloadType": "str",
        "x": 220,
        "y": 480,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "bb65f185.3adab",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "216000",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/os_hostname",
        "payloadType": "str",
        "x": 250,
        "y": 520,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "51318833.c258d8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "36000",
        "crontab": "",
        "once": true,
        "onceDelay": "450",
        "topic": "cmd/request",
        "payload": "local/+/+/settings/#",
        "payloadType": "str",
        "x": 220,
        "y": 400,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "311e9db6.ba1b82",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "66c2e225.64a90c"
        ],
        "x": 735,
        "y": 140,
        "wires": []
    },
    {
        "id": "7109deeb.a22d3",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "900",
        "topic": "cmd/request",
        "payload": "local/+/+/cpu/#",
        "payloadType": "str",
        "x": 240,
        "y": 800,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "2dde7725.9f7118",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "254c663c.1890fa"
        ],
        "x": 735,
        "y": 100,
        "wires": []
    },
    {
        "id": "dd49d580.483498",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "USERS",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"admin\":{\"networks\":[{\"networkId\":\"local\",\"server\":\"192.168.0.250\",\"port\":8080,\"secure\":false,\"user\":\"admin\",\"password\":\"12345678\"}]},\"guest\":{\"networks\":[{\"networkId\":\"local\",\"server\":\"192.168.0.250\",\"port\":8080,\"secure\":false,\"user\":\"guest\",\"password\":\"guest\"}]}}",
        "payloadType": "json",
        "x": 1000,
        "y": 60,
        "wires": [
            [
                "94ba0d3d.e77e1"
            ]
        ]
    },
    {
        "id": "94ba0d3d.e77e1",
        "type": "change",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "users",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4a7695e79d88af15",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "mode": "link",
        "links": [
            "3a197b072de52765",
            "03eda15622c029f1",
            "ef923f9f8ffe71dd"
        ],
        "x": 735,
        "y": 320,
        "wires": []
    },
    {
        "id": "8b488cbb14b093cb",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 60,
        "wires": []
    },
    {
        "id": "bfed0a27b4c87767",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "about",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 620,
        "y": 520,
        "wires": [
            [
                "5591a77bf54b568e"
            ]
        ]
    },
    {
        "id": "fb19782f815bcb84",
        "type": "http response",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 520,
        "wires": []
    },
    {
        "id": "5591a77bf54b568e",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "func": "msg.payload = JSON.stringify({\"node\":global.get(\"node\"),\"networkId\":global.get(\"networkId\"),\"nodeDescription\":global.get(\"nodeDescription\"),\"nodeName\":global.get(\"nodeName\")})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 520,
        "wires": [
            [
                "fb19782f815bcb84"
            ]
        ]
    },
    {
        "id": "ff28800e4bbba1c7",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "Clear Alarms & Sync",
        "func": "\n\n\n//for (var net in global.get(\"readings\")) {\nvar net = global.get(\"localNetworkId\");\n\n    for (var dev in global.get(\"readings.\"+net)) {\n    \n            if (global.get(\"readings.\"+net+\".\"+dev+\".alarm\")) {\n                \n                global.set(\"readings.\"+net+\".\"+dev+\".alarm\", {});\n                \n            }\n        \n    }\n    \n//}\n\nmsg.topic = \"cmd/sync\"\nmsg.payload = net + \"/#\";\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 300,
        "wires": [
            [
                "0a7561544c78863d"
            ]
        ]
    },
    {
        "id": "f8a586463e821247",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "ff28800e4bbba1c7"
            ]
        ]
    },
    {
        "id": "0a7561544c78863d",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1345,
        "y": 300,
        "wires": []
    },
    {
        "id": "78d6fbafd103f379",
        "type": "ui_button",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Clear Alarms",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "cmd:clearalarms",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 990,
        "y": 280,
        "wires": [
            [
                "ff28800e4bbba1c7"
            ]
        ]
    },
    {
        "id": "0916c03a0c141250",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "local/+/+/+/cpu_currentload",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/cpu_currentload",
        "payloadType": "str",
        "x": 240,
        "y": 760,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "518305dd1d973895",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/api/readings/:vargroup",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 680,
        "y": 660,
        "wires": [
            [
                "1c09662af1958f62",
                "dd20e9fca3781c4c"
            ]
        ]
    },
    {
        "id": "1c09662af1958f62",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "Metrics",
        "func": "\nvar metrics = global.get(\"readings.local\") || {};\n\n\nvar net = global.get(\"networkId\") || \"local\";\n\nvar oot = { readings: [] };\n//oot = 'stat_state {network=\"local\", node=\"mynodered1\", device=\"prometheus\", vargroup=\"stat\", varkey=\"state\"} 1\\n';\n\nfor (var dev in metrics) {\n    for (var grp in metrics[dev]) {\n\n        if (msg.req.params.vargroup && grp != msg.req.params.vargroup) { continue; }\n\n        for (var m in metrics[dev][grp]) {\n\n            var tline = {};\n            if (metrics[dev][grp][m].topic) {\n\n                tline.value = metrics[dev][grp][m].value;\n                tline.time = metrics[dev][grp][m].timestamp;\n                tline.title = metrics[dev][grp][m].title || \"\";\n                tline.units = metrics[dev][grp][m].units || \"\";\n                tline.network = net;\n                tline.node = metrics[dev][grp][m].topic.split(\"/\")[1];\n                tline.device = dev;\n                tline.vargroup = grp;\n                tline.varkey = m;\n\n                if (msg.payload.select) {\n\n                    tline = tline[msg.payload.select];\n\n                    if (oot.readings.indexOf(tline) < 0) { oot.readings.push(tline); }\n\n                } else {\n\n                    oot.readings.push(tline);\n                }\n\n\n\n            }\n            //oot += tops[3] + '_' + tops[4] + '{network=\"' + net + '\",node=\"' + tops[1] + '\",device=\"' + tops[2] + '\",vargroup=\"' + tops[3] + '\",varkey=\"' + tops[4] + '\"} ' + metrics[m].payload + \"\\n\";\n        }\n    }\n}\n\nmsg.payload = oot;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 600,
        "wires": [
            [
                "de79189b967c2492",
                "303547d4871dc1e6"
            ]
        ]
    },
    {
        "id": "f4cec4c48cb94a38",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/api/readings",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 650,
        "y": 600,
        "wires": [
            [
                "1c09662af1958f62",
                "dc8557effbb07747"
            ]
        ]
    },
    {
        "id": "de79189b967c2492",
        "type": "http response",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1090,
        "y": 600,
        "wires": []
    },
    {
        "id": "303547d4871dc1e6",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 660,
        "wires": []
    },
    {
        "id": "7622ca4aa75d6b27",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/cmd",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 620,
        "y": 740,
        "wires": [
            [
                "37ee9ad397338449",
                "5fd1baeb1c818156"
            ]
        ]
    },
    {
        "id": "37ee9ad397338449",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "Metrics",
        "func": "msg.payload={\"data\":[{return:\"ok\"}]};\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 760,
        "wires": [
            [
                "859484ecdc7e8eff",
                "449a3389bd406444"
            ]
        ]
    },
    {
        "id": "859484ecdc7e8eff",
        "type": "http response",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 760,
        "wires": []
    },
    {
        "id": "5fd1baeb1c818156",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 720,
        "wires": []
    },
    {
        "id": "247724fd2c92998a",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/cmd",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 620,
        "y": 800,
        "wires": [
            [
                "37ee9ad397338449",
                "08df032ed7de4560"
            ]
        ]
    },
    {
        "id": "449a3389bd406444",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 800,
        "wires": []
    },
    {
        "id": "08df032ed7de4560",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 800,
        "wires": []
    },
    {
        "id": "dd20e9fca3781c4c",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 660,
        "wires": []
    },
    {
        "id": "2cc170705ae25adc",
        "type": "mqtt in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "topic": "_/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 100,
        "wires": [
            [
                "8aa46b4ede182d15"
            ]
        ]
    },
    {
        "id": "8aa46b4ede182d15",
        "type": "change",
        "z": "580bb6a3.5dc1d",
        "name": "remove _/",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "_/",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "6db74d6.e025e34"
            ]
        ]
    },
    {
        "id": "de5cbb28.0bca7",
        "type": "switch",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/cmd/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/set/",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 120,
        "wires": [
            [],
            [
                "2dde7725.9f7118"
            ],
            [
                "311e9db6.ba1b82"
            ]
        ]
    },
    {
        "id": "dc8557effbb07747",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 560,
        "wires": []
    },
    {
        "id": "6af90896.407f38",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 700,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "562c9c07.d14df4",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "//if (!flow.get(\"selectedhiu\")) { return null; }\n//if (!global.get(\"readings.\" + flow.get(\"selectedhiu\"))) { return null; }\n\n\nvar icongreen = 'http://www.heatweb.co.uk/w/images/thumb/2/2a/Greenled.png/120px-Greenled.png'; \nvar iconred = 'http://www.heatweb.co.uk/w/images/thumb/3/39/Redled.png/120px-Redled.png'; \nvar icongrey = 'https://www.heatweb.co.uk/w/images/7/78/Greyled.png'; \nvar iconyellow = 'https://www.heatweb.co.uk/w/images/thumb/5/59/Yellowled.png/180px-Yellowled.png'; \n                        \nvar htmlt = '';\nvar filt = flow.get(\"filterdata\") || \"\";\n\nvar listout = [];\n\nvar defaultTopics = global.get(\"topics.default\") || {};\nvar datData = defaultTopics[\"dat\"] || {}; \n\nfor (var network in global.get(\"readings\")) { \n\n    for (var device in global.get(\"readings.\"+network)) { \n        \n        var htmlline = \"\";\n        var htmllineCount = 0;\n        var statStateLine = \"\";\n        \n        var hiudata = global.get(\"readings.\" + network + \".\" + device);\n        \n        \n        //flow.set(\"tempid\",hiudata.system.tempid);\n        \n        \n        var dicon=\"\";\n        \n        for (var key in hiudata) {\n            \n            if(key == flow.get(\"selecteddata\") || flow.get(\"selecteddata\")=='all' ) { \n            \n                var groupdata = hiudata[key];\n                \n                var typeData = defaultTopics[key] || {}; \n            \n                for (var gkey in groupdata) {\n                    \n                    var okline=1;\n                    \n                    if (gkey==\"nodeXXX\" || gkey==\"timestamp\") { okline=0; }\n                    \n                    if (key==\"json\")  { okline=0; }\n                    \n                    if (filt!==\"\") {\n                        \n                        var teststr = \" /\" + device + \"/\" + key + \"/\" + gkey + \"/\" + network + \"/\"  ;\n                        \n                        if (key==\"alarm\") {\n                            if(groupdata[gkey].value == 'ok' || groupdata[gkey].value == '0') {\n                                teststr += \"/green\";\n                            } else { \n                                teststr += \"/red\";\n                            }\n                            \n                        }\n                     \n                        \n                        if (teststr.indexOf(filt)<1) { okline=0; }\n                    }\n                    \n                    if (okline==1) {\n                        var icon = \"\";\n                        var iconsrc = \"\";\n                        if (key==\"alarm\") { \n                            \n                            if(groupdata[gkey].value == 'ok' || groupdata[gkey].value == '0') {\n                                \n                                iconsrc = icongreen;\n                            } else if(groupdata[gkey].value == 'off') {\n                                iconsrc = icongrey ; \n                            } else { \n                                iconsrc = iconred ; \n                            }\n                            icon=' <img height=\"12\" src=\"' + iconsrc + '\">'; \n                        }\n                        \n                        var gkeySh = gkey;\n                        //if (gkeySh.length>16) { gkeySh = gkeySh.substr(0,10) + \"..\" + gkeySh.substr(gkeySh.length-4); }\n                        \n                        //mm +=  '<md-button class=\"rounded myB\" ng-click=\"send({payload:' + \"'\" + m[mmm] + \"'\" + '})\">';\n                        \n                        var butts = \"\";\n                        //butts = '</td><td><span id=\"dbut' + key + '\" ng-click=\"send({payload:' + \"'\" + key + \"/\" + gkeySh + \"'\" + '})\">Graph</span>';\n                        \n                        //if (!isNaN(groupdata[gkey].value)) {\n                        var hasH = global.get(\"readingsHistory.\" + network + \".\" + device + \".\" + key + \".\" + gkey) || [];\n                        if (!isNaN(groupdata[gkey].value) && hasH[2]) {\n                            butts += '<td class=\"tdLS\" width=\"70\">';\n                            //butts += '<span class=\"smB\">';\n                            butts +=  '<md-button class=\"rounded myB thinB\" ng-click=\"send({payload:' + \"'\" + network + \".\" + device + \".\" + key + \".\" + gkeySh + \"'\" + '})\">';\n                            butts +=  \"Graph\";\n                            butts +=  '</md-button>';\n                            //butts +=  '</span>';\n                            butts +=  '</td>';\n                        } else {\n                            butts =  '<td class=\"tdLS\" width=\"70\"> </td>';\n                        }\n                        \n                        //htmllineAdd = '<tr><td>' + key + \" / \" + gkeySh + '</td><td align=\"right\">' + groupdata[gkey].value + icon + '</td></tr>';\n                        //htmllineAdd = '<table width=\"100%\"><tr><td>' + key + \" / \" + gkeySh + '</td><td align=\"right\">' + groupdata[gkey].value + icon + '</td><td> </td></tr></table>';\n                        htmllineAdd = '<table width=\"100%\"><tr><td>' + key + \" / \" + gkeySh + '</td><td align=\"right\">' + groupdata[gkey].value + icon  +'</td><td> </td>' + butts + '</tr></table>';\n\n                        htmlline += htmllineAdd\n                        if(key==\"stat\" && gkey==\"state\") { statStateLine = htmllineAdd; }\n                        htmllineCount++;\n                        \n                        \n                        \n                        var gkey2 = gkey.replace(\"Sensor\",\"\");\n                        var keyData = typeData[gkey2] || datData[gkey2] || {};\n                        \n                        var mytitle = keyData[\"title\"] || gkey;\n                        var units = keyData[\"units\"] || \"\";\n                        \n                        if ((gkey.indexOf(\"Sensor\")>0) && (mytitle.indexOf(\"Sensor\")<1)) { \n                            mytitle += \" sensor\"\n                            units = \"\";\n                        }\n                        \n                        if (!typeData[gkey2]) {  units = \"\"; }\n                        \n                        \n                        var moredes = device + \" / \" + key;\n                        \n                        \n                        if (keyData[\"title\"]) { moredes += \" / \" + gkey; }\n                        \n                        //var units = \"\";\n                        var mytopic =  groupdata[gkey].topic; //\"ihiu/\"+node+\"/\"+xx+\"/\"+k+\"/\"+kk;\n                        \n                        var newb={\n                            \"title\": \"<table cellpadding='0' width='100%'><tr><td><b>\" + mytitle + \"</b></td><td align='right'><big>\" + groupdata[gkey].value +  \" \"+ units + \"</big></td></tr></table>\",\n                            \"description\": \"<table cellpadding='0' width='100%'><tr><td>\" + moredes + \"</td><td width='60' align='center'></td></tr></table>\",\n                             \"topic\": mytopic\n                        };\n                        if (iconsrc!==\"\") { newb[\"icon\"] = iconsrc; } //else  { newb[\"icon_name\"] = \"fa-cog\"; }\n                           \n                        listout.push(newb);\n                        \n                    }\n                }\n        \n            }\n        }\n        \n        if(hiudata[\"stat\"]) {\n        if(hiudata[\"stat\"][\"state\"]){\n            if(hiudata[\"stat\"][\"state\"][\"value\"] == 'ok') {\n                dicon=' <img height=\"12\" src=\"' + icongreen + '\">'; \n            } else if(hiudata[\"stat\"][\"state\"][\"value\"] == 'on') {\n                dicon=' <img height=\"12\" src=\"' + icongreen + '\">'; \n            }  else if(hiudata[\"stat\"][\"state\"][\"value\"].indexOf('arning')>0) {\n                dicon=' <img height=\"12\" src=\"' + iconyellow + '\">'; \n            } else if(hiudata[\"stat\"][\"state\"][\"value\"] == 'alarm') {\n                dicon=' <img height=\"12\" src=\"' + iconred + '\">'; \n            } else { \n                dicon=' <img height=\"12\" src=\"' + icongrey + '\">'; \n            }\n            dicon = \"<b>\" + hiudata[\"stat\"][\"state\"][\"value\"] + \"</b>\" + dicon;\n        }\n        }\n        \n        if (htmlline!==\"\") {\n        \n            htmlt +=  '<table width=\"100%\"><tr><td><b>' + device + '</b></td><td align=\"right\">' + dicon + '</td></tr></table>';\n            \n            if(htmllineCount==1 && htmlline.indexOf(\"tat / state\")>0) { }\n            else {\n                \n                if(htmllineCount>1 && statStateLine!==\"\") { htmlline =  htmlline.replace(statStateLine,\"\"); }\n                htmlt +=   htmlline; \n                \n            }\n            \n            htmlt +=  '<hr />';\n        }\n    }\n}\n\nhtmlt = htmlt.replace(/Exchanger/g, \"\");\n\nhtmlt = htmlt.replace(\">st<\", \">State<\");\nhtmlt = htmlt.replace(\">fC<\", \">DHW Flow Rate [l/m]<\");\nhtmlt = htmlt.replace(\">tCo<\", \">DHW Output Temperature [C]<\");\nhtmlt = htmlt.replace(\">tH<\", \">Primary Flow Temp [C]<\");\nhtmlt = htmlt.replace(\">tHoDHW<\", \">Primary Rtn Temp DHW [C]<\");\nhtmlt = htmlt.replace(\">tHoCH<\", \">Primary Rtn Temp CH [C]<\");\nhtmlt = htmlt.replace(\">tHoDHW<\", \">Primary Rtn Temp DHW [C]<\");\nhtmlt = htmlt.replace(\">xDHW<\", \">Valve Position DHW<\");\nhtmlt = htmlt.replace(\">xCH<\", \">Valve Position CH<\");\nhtmlt = htmlt.replace(\">stat<\", \">Room Thermostat<\");\nhtmlt = htmlt.replace(\">dpH<\", \">Primary Diff Pressure [bar]<\");\nhtmlt = htmlt.replace(\">fHDHW<\", \">Primary Flow Rate DHW [l/m]<\");\nhtmlt = htmlt.replace(\">fHCH<\", \">Primary Flow Rate CH [l/m]<\");\nhtmlt = htmlt.replace(\">eT<\", \">Temp Error DHW [C]<\");\n\nhtmlt = htmlt.replace(\">TTdhw<\", \">Setpoint DHW [C]<\");\nhtmlt = htmlt.replace(\">eS<\", \">Error State<\");\nhtmlt = htmlt.replace(\">tCHo<\", \">CH Output Temp [C]<\");\nhtmlt = htmlt.replace(\">pCH<\", \">CH System Pressure [bar]<\");\nhtmlt = htmlt.replace(\">pump<\", \">CH Pump<\");\nhtmlt = htmlt.replace(\">vC<\", \">DHW Volume Total [ltr]<\");\n\n\n\nmsg.payload=htmlt;\n\nmsg2={}; msg2.payload = listout;\n\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 700,
        "wires": [
            [
                "d9ed7968.b72af8"
            ],
            [
                "6b5c6225.dcc93c"
            ]
        ]
    },
    {
        "id": "d9ed7968.b72af8",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datalist",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "9e9cdb4c.9f6be8"
            ]
        ]
    },
    {
        "id": "6b5c6225.dcc93c",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 760,
        "wires": []
    },
    {
        "id": "2d561223.d9db6e",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selecteddata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 620,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "6789714f.99829",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filterdata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "drilling",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 780,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "f6a36c6b.c8c3",
        "type": "delay",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "38cd61a0.1cd1fe",
        "type": "rbe",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1150,
        "y": 580,
        "wires": [
            [
                "d9ed7968.b72af8"
            ]
        ]
    },
    {
        "id": "9e9cdb4c.9f6be8",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "drilling",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1530,
        "y": 620,
        "wires": [
            [
                "282422b2.6aa76e"
            ]
        ]
    },
    {
        "id": "ed5f8555.f418e8",
        "type": "ui_dropdown",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Type",
        "group": "ee34b8ab.222b68",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "All",
                "value": "all",
                "type": "str"
            },
            {
                "label": "Alarms",
                "value": "alarm",
                "type": "str"
            },
            {
                "label": "Readings",
                "value": "dat",
                "type": "str"
            },
            {
                "label": "Statistics",
                "value": "stat",
                "type": "str"
            },
            {
                "label": "Settings",
                "value": "settings",
                "type": "str"
            },
            {
                "label": "System",
                "value": "system",
                "type": "str"
            },
            {
                "label": "Meters",
                "value": "meter",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 540,
        "y": 620,
        "wires": [
            [
                "2d561223.d9db6e"
            ]
        ]
    },
    {
        "id": "2513de4a.a661c2",
        "type": "ui_text_input",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "ee34b8ab.222b68",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 560,
        "y": 780,
        "wires": [
            [
                "6789714f.99829"
            ]
        ]
    },
    {
        "id": "282422b2.6aa76e",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "template",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 620,
        "wires": [
            [
                "193e14fb.d6a80b"
            ]
        ]
    },
    {
        "id": "76bee7.e09ff118",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "drilling",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 560,
        "wires": [
            [
                "ed5f8555.f418e8"
            ]
        ]
    },
    {
        "id": "adfe6cac.8c846",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "setGroup",
        "links": [
            "d18c9773.2bb088"
        ],
        "x": 355,
        "y": 620,
        "wires": [
            [
                "ed5f8555.f418e8"
            ]
        ]
    },
    {
        "id": "ab8cb03b.d70f3",
        "type": "ui_dropdown",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Device",
        "group": "ee34b8ab.222b68",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "All",
                "value": "",
                "type": "str"
            },
            {
                "label": "Alarms",
                "value": "/red",
                "type": "str"
            },
            {
                "label": "State",
                "value": "state",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 560,
        "y": 840,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "504e8408.6f0e6c",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "shuffle",
        "payload": "stat/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 760,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "8a3813c5.ed4c",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "group": "ee34b8ab.222b68",
        "order": 1,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "ALL",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 680,
        "wires": [
            [
                "76bee7.e09ff118",
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "d57b221e.46366",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "name": "alarms",
        "group": "ee34b8ab.222b68",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "warning",
        "payload": "alarm",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 340,
        "y": 720,
        "wires": [
            [
                "ed5f8555.f418e8"
            ]
        ]
    },
    {
        "id": "c988811f.23218",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 3,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "flag",
        "payload": "/system",
        "payloadType": "str",
        "topic": "",
        "x": 353.0833282470703,
        "y": 804.0833435058594,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "9a659cee.6305e",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 4,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-thermometer-half",
        "payload": "dat/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 840,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "8e362fbc.2801",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 5,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-thermometer-half",
        "payload": "settings/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 880,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "220e2954.01e376",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "setFilter",
        "links": [
            "9b2ec796.e88cf8"
        ],
        "x": 555,
        "y": 720,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "193e14fb.d6a80b",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "43af1847.935fd8",
        "name": "rout",
        "order": 1,
        "width": "12",
        "height": "6",
        "format": "<br><div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1890,
        "y": 620,
        "wires": [
            [
                "d876816a.e2244",
                "68fce0f6.7193f"
            ]
        ]
    },
    {
        "id": "ffc2f769.631ac8",
        "type": "trigger",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 540,
        "y": 920,
        "wires": [
            [
                "ab8cb03b.d70f3"
            ]
        ]
    },
    {
        "id": "d876816a.e2244",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2110,
        "y": 620,
        "wires": []
    },
    {
        "id": "68fce0f6.7193f",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "//msg.payload = \"http://localhost/index.php?page=Graph&height=350&show=\"+msg.payload;\nmsg.payload = \"cmd:graph:\"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1880,
        "y": 720,
        "wires": [
            [
                "ba5f5516.919e68"
            ]
        ]
    },
    {
        "id": "b1160ab2.4def48",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "<br><div ng-bind-html=\"msg.payload\"></div> ",
        "output": "str",
        "x": 1680,
        "y": 680,
        "wires": [
            [
                "193e14fb.d6a80b"
            ]
        ]
    },
    {
        "id": "83178f3c.8e09d",
        "type": "rbe",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 750,
        "y": 980,
        "wires": [
            [
                "ffc2f769.631ac8"
            ]
        ]
    },
    {
        "id": "ba5f5516.919e68",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "906024b7.9e3e48",
            "96558a40.5d4f48"
        ],
        "x": 1975,
        "y": 720,
        "wires": []
    },
    {
        "id": "9c3bb7a5.4d7a58",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "DROPDOWN",
        "func": "msg.options  = [ {\"All\":\"/\"}, {\"Alarms\":\"/red\"} ];\n\nfor (var network in global.get(\"readings\")) { \n\n    var lineout = {};\n    lineout[network.replace(\"_\", \" \")] = \"/\" + network + \"/\";\n    msg.options.push(lineout);\n\n}\n\nfor (network in global.get(\"readings\")) { \n\n    for (var device in global.get(\"readings.\"+network)) { \n\n        lineout = {};\n        lineout[device] = \"/\" + device + \"/\";\n        msg.options.push(lineout);\n    \n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 980,
        "wires": [
            [
                "83178f3c.8e09d"
            ]
        ]
    },
    {
        "id": "e5c3fb8b.944008",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 980,
        "wires": [
            [
                "9c3bb7a5.4d7a58"
            ]
        ]
    },
    {
        "id": "562969d9.1acd48",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "history",
        "func": "var gdat0 = {\"series\":[],\"data\":[]};\n\nvar gtype = msg.payload;\nvar selectedGraph=\",\";\nvar sd = global.get(\"standardGraph\") || \"\";\n\nif (msg.payload.substr(0,6)==\"graph:\") {\n    \n    gtype = \"graphall\";\n    sd = msg.payload.substr(6);\n} \n\n\n\n\n\nfor (var lin in sd.split(\",\")) {\n    \n    var dothis = 1;\n    var ln = sd.split(\",\")[lin];\n    \n    if (gtype!==\"graphall\") {\n        \n        var lns = ln.split(\".\")[3];\n        if(gtype==\"grapht\" && lns.substr(0,1)!=\"t\" && lns.substr(0,1)!=\"T\") { dothis = 0; continue;}\n        else if(gtype==\"graphp\" && lns.substr(0,1)!=\"p\") { dothis = 0; continue;}\n        else if(gtype==\"graphf\" && lns.substr(0,1)!=\"f\") { dothis = 0; continue;}\n        else if(gtype==\"graphkwh\" && lns.substr(0,3)!=\"kwh\") { dothis = 0; continue;}\n        else if(gtype==\"graphkw\" && (lns.substr(0,2)!=\"kw\" || lns.substr(0,3)==\"kwh\")) { dothis = 0; continue;}\n        \n    }\n    \n    if (dothis==1) {\n        \n        selectedGraph += \",\" + ln.split(\".\")[3] + \",\";\n        \n        var dat = global.get(\"readingsHistory.\" + ln) || {};\n        \n        var itemData = [];\n        for (var readin in dat) {\n            \n            itemData.push({\"x\":dat[readin].timestamp, \"y\":dat[readin].value});\n            \n        }\n        \n        gdat0.series.push(ln.split(\".\")[3]);\n        gdat0.data.push(itemData);\n    }\n    \n}\n\nmsg.payload = [];\nmsg.payload.push(gdat0);\n\n\nglobal.set(\"selectedGraph\",selectedGraph);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1980,
        "wires": [
            [
                "10c3f765.254dd9"
            ]
        ]
    },
    {
        "id": "f4f1c704.705e38",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "poweroff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "screenoff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cleargraph",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "graph",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "32b356c.727daaa"
            ],
            [
                "4b53ff20.944ec"
            ],
            [
                "5c85c22a.9dd31c"
            ],
            [
                "23bec7e3.287aa8"
            ],
            [
                "562969d9.1acd48",
                "1fbc21a0.42a4de"
            ]
        ]
    },
    {
        "id": "10c3f765.254dd9",
        "type": "ui_chart",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "group": "31ddf4e3.0519dc",
        "order": 0,
        "width": "12",
        "height": "7",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1030,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "7106c32a.f7fbdc",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 1980,
        "wires": [
            [
                "562969d9.1acd48"
            ]
        ]
    },
    {
        "id": "c797794c.dd6478",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "if((flow.get(\"screenon\")||\"1\")!=\"1\") { flow.set(\"screenon\",\"1\"); return null; }\n\n\nif ((\" \"+msg.payload).indexOf(\"cmd:\")==1) {\n    \n    msg2={};\n    msg2.payload = msg.payload.substr(4);\n    \n    return [null,null,msg2,msg];\n    \n} else if (((\" \"+msg.payload).indexOf(\"http\")==1) || ((\" \"+msg.payload).indexOf(\"dashboard.php\")==1)) {\n    \n    msg2={};\n    msg2.payload = msg.payload;\n    \n    msg.payload = \"Browser\";\n    \n    return [msg,msg2,null,msg];\n    \n} else {\n\n    return [msg,null,null,msg];\n\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 350,
        "y": 1400,
        "wires": [
            [
                "330fb08c.56046"
            ],
            [
                "157ff427.90adac"
            ],
            [
                "66bd8c8e.5bb634",
                "f4f1c704.705e38"
            ],
            [
                "f4a2cb0e.cc71e8",
                "93aa8803.d762d8"
            ]
        ]
    },
    {
        "id": "32b356c.727daaa",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to shut down?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1520,
        "wires": [
            [
                "efbdf53c.f17388"
            ]
        ]
    },
    {
        "id": "4b53ff20.944ec",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to reboot?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1580,
        "wires": [
            [
                "3c8aa46a.228a1c"
            ]
        ]
    },
    {
        "id": "5c85c22a.9dd31c",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "export DISPLAY=:0; sleep 1; xset dpms force off",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 940,
        "y": 1640,
        "wires": [
            [
                "857d0ead.0eefc"
            ],
            [],
            []
        ]
    },
    {
        "id": "23bec7e3.287aa8",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "cleargraph",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1920,
        "wires": [
            [
                "10c3f765.254dd9"
            ]
        ]
    },
    {
        "id": "66c2e225.64a90c",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "7d2dded9.2db22",
            "abe9ca55.20fc08",
            "311e9db6.ba1b82"
        ],
        "x": 535,
        "y": 2100,
        "wires": [
            [
                "808dfefa.ca41b",
                "eb2a6826.ed1f08"
            ]
        ]
    },
    {
        "id": "23c9b825.020758",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 850,
        "y": 1880,
        "wires": [
            [
                "10c3f765.254dd9"
            ]
        ]
    },
    {
        "id": "330fb08c.56046",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "f89813e8.cbd968",
            "27dd3d5e.5e27e2"
        ],
        "x": 575,
        "y": 1360,
        "wires": []
    },
    {
        "id": "157ff427.90adac",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "browser",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<style>\n    .maxsiz {\n\n    width: 100%; \n    height: 100%;\n\n}\n</style>\n<iframe class=\"maxsiz\" frameborder=\"0\" src=\"{{{payload}}}\"></iframe>",
        "output": "str",
        "x": 620,
        "y": 1400,
        "wires": [
            [
                "8382fe3d.011db"
            ]
        ]
    },
    {
        "id": "66bd8c8e.5bb634",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 1440,
        "wires": []
    },
    {
        "id": "f4a2cb0e.cc71e8",
        "type": "trigger",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "7",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 270,
        "y": 1620,
        "wires": [
            [
                "f0465a90.803e88"
            ]
        ]
    },
    {
        "id": "93aa8803.d762d8",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 290,
        "y": 1580,
        "wires": []
    },
    {
        "id": "96558a40.5d4f48",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "gomenu",
        "links": [
            "ba5f5516.919e68",
            "8bd72823.48ffa8"
        ],
        "x": 195,
        "y": 1400,
        "wires": [
            [
                "c797794c.dd6478"
            ]
        ]
    },
    {
        "id": "efbdf53c.f17388",
        "type": "ui_toast",
        "z": "9ad9f74f.55ef58",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 1520,
        "wires": [
            [
                "203458a8.c15748"
            ]
        ]
    },
    {
        "id": "3c8aa46a.228a1c",
        "type": "ui_toast",
        "z": "9ad9f74f.55ef58",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 1580,
        "wires": [
            [
                "5fd2a71f.e1c788"
            ]
        ]
    },
    {
        "id": "857d0ead.0eefc",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "screenon",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Dashboard",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1640,
        "wires": [
            [
                "994bf91b.a564b8"
            ]
        ]
    },
    {
        "id": "8382fe3d.011db",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "e2be1f54.b5e92"
        ],
        "x": 715,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f0465a90.803e88",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "screenon",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "203458a8.c15748",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1150,
        "y": 1520,
        "wires": [
            [
                "5b96ed94.afa714"
            ]
        ]
    },
    {
        "id": "5fd2a71f.e1c788",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1150,
        "y": 1580,
        "wires": [
            [
                "33c0b5f6.2b7a9a"
            ]
        ]
    },
    {
        "id": "5b96ed94.afa714",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "sudo shutdown -h now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1340,
        "y": 1520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "33c0b5f6.2b7a9a",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "b8d3b38a.4c844"
        ],
        "x": 1255,
        "y": 1580,
        "wires": []
    },
    {
        "id": "6b4903b4.fc142c",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "all",
        "x": 560,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "1fbc21a0.42a4de",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Graph",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1900,
        "wires": [
            [
                "6b4903b4.fc142c"
            ]
        ]
    },
    {
        "id": "a004a982.0cc798",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "group": "ee34b8ab.222b68",
        "name": "Virtual Keyboard",
        "order": 6,
        "width": "4",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "808dfefa.ca41b",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "pass graph",
        "func": "// var inv = msg.payload;\n\n// msg.payload = inv.value;\n\n// if (!inv.topic.split(\"/\")[4]) { return null; }\n\nmsg.topic = msg.topic.split(\"/\")[4];\n\n\nvar selectedGraph = global.get(\"selectedGraph\") || \"\";\n\nif (selectedGraph.indexOf(\",\"+msg.topic+\",\")<1) { return null; }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2100,
        "wires": [
            [
                "10c3f765.254dd9",
                "eb2a6826.ed1f08"
            ]
        ]
    },
    {
        "id": "eb2a6826.ed1f08",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 2200,
        "wires": []
    },
    {
        "id": "ccbb20ec.44a33",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "export DISPLAY=:0; sleep 1; xset dpms force on",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 600,
        "y": 1280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bf3b2876.73db98",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 1280,
        "wires": [
            [
                "ccbb20ec.44a33"
            ]
        ]
    },
    {
        "id": "f8df0f4c.e553c",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 1740,
        "wires": [
            [
                "5c85c22a.9dd31c"
            ]
        ]
    },
    {
        "id": "63f5f1b4.29d7f",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "600",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 1780,
        "wires": [
            [
                "5c85c22a.9dd31c"
            ]
        ]
    },
    {
        "id": "994bf91b.a564b8",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "all",
        "x": 1300,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "ddb3413d.f5131",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "d57b221e.46366"
            ]
        ]
    },
    {
        "id": "b97bc1c0.cb899",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "c982fbb8.1deb38",
        "name": "Clock Toolbar",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": " \n<script>\n    (function(scope) {\n        console.log('Position 1');\n        console.dir(scope);\n        console.log(scope.msg);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position 2');\n            console.dir(data);\n            alert(data);\n        });\n    })(scope);\n</script>\n\n<script id=\"titleScript\" type=\"text/javascript\">\n\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nvar instr = \"\";\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    \n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    div[0].style.fontSize = '18px';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.html(d.toLocaleString('en-GB') + (instr||\"\"));\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n    \n    \n}\n\n\n\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1160,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5f220091.bf4cf",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "ca932fda.09d3",
            "c03b2ad5.8e8478"
        ],
        "x": 195,
        "y": 560,
        "wires": [
            [
                "76bee7.e09ff118",
                "2513de4a.a661c2",
                "b0b3904d.3e833"
            ]
        ]
    },
    {
        "id": "43e007fe.38ff38",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "all",
        "x": 540,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b0b3904d.3e833",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Readings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "43e007fe.38ff38"
            ]
        ]
    },
    {
        "id": "9a783cd.aa426c",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 80,
        "wires": []
    },
    {
        "id": "8e10d78d.1bb458",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1310,
        "y": 80,
        "wires": [
            [
                "ec484785.877f98"
            ]
        ]
    },
    {
        "id": "ec484785.877f98",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "chromium-browser --start-fullscreen --kiosk --incognito --noerrdialogs --disable-translate --no-first-run --fast --fast-start --disable-infobars --disable-features=TranslateUI --disk-cache-dir=/dev/null  --password-store=basic --disable-pinch --overscroll-history-navigation=disabled --disable-features=TouchpadOverscrollHistoryNavigation 'http://localhost:1880/ui'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "chromium-browser",
        "x": 1490,
        "y": 80,
        "wires": [
            [
                "9a783cd.aa426c"
            ],
            [
                "9a783cd.aa426c"
            ],
            []
        ]
    },
    {
        "id": "a6df218d.b650f",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "c982fbb8.1deb38",
        "name": "Fonts",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto\">\n<!--<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Lato\">-->\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 530,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9d2f9b63.8f9228",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<script>\n    (function(scope) {\n        console.log('Position 1');\n        console.dir(scope);\n        console.log(scope.msg);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position 2');\n            console.dir(data);\n            alert(data);\n        });\n    })(scope);\n</script>\n\n<script id=\"titleScript\" type=\"text/javascript\">\n\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nvar instr = \"\";\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    \n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    div[0].style.fontSize = '18px';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.html(d.toLocaleString() + (instr||\"\"));\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n    \n    \n}\n\n\n\n\n</script>\n",
        "output": "str",
        "x": 960,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "58390734.6e09a8",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 700,
        "y": 280,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "26b0c09f.0e9e2",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "586160b5.d6aa"
        ],
        "x": 195,
        "y": 340,
        "wires": [
            [
                "4afbfbee.74b4d4",
                "444f8e15b3e99d1a"
            ]
        ]
    },
    {
        "id": "8e16bcc.c4a414",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "25",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "50",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "75",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "58390734.6e09a8"
            ],
            [
                "54605462.01740c"
            ],
            [
                "8ea6bdbf.b18c1"
            ],
            [
                "38a7a1a.5f0775e"
            ],
            [
                "9aaea10.1c61d6"
            ]
        ]
    },
    {
        "id": "54605462.01740c",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"15\"><rect x=\"7\" y=\"11\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 320,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "90a5a2d9.4144b",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"15\"><rect x=\"0\" y=\"0\" width=\"5\" height=\"15\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"8\" y=\"5\" width=\"5\" height=\"10\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 920,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8ea6bdbf.b18c1",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"15\"><rect x=\"7\" y=\"11\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"14\" y=\"7\" width=\"5\" height=\"8\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 360,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "38a7a1a.5f0775e",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"16\"><rect x=\"0\" y=\"12\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"7\" y=\"8\" width=\"5\" height=\"8\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"14\" y=\"4\" width=\"5\" height=\"12\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 400,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "9aaea10.1c61d6",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"28\" height=\"16\"><rect x=\"0\" y=\"12\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"7\" y=\"8\" width=\"5\" height=\"8\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"14\" y=\"4\" width=\"5\" height=\"12\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"21\" y=\"0\" width=\"5\" height=\"16\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 440,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "4afbfbee.74b4d4",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 400,
        "wires": []
    },
    {
        "id": "4a529116.59c24",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 260,
        "wires": []
    },
    {
        "id": "142dae9.49d4751",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "3d9e45e.bcd50ba",
        "name": "Dashboard stylesheet",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n.invisible {\n    display: none;\n}\n\n.dot {\n    height: 13px;\n    width: 13px;\n    background-color: rgb(52, 58, 52);\n    border-radius: 20%;\n    border: 2px;\n    border-color: rgb(5, 5, 20);\n    display: inline-block;\n}\n\n.maxsiz {\n    position: absolute;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100vh;\n}\n\n/* SCROLL BAR */\n/* width */\n::-webkit-scrollbar {\n  width: 12px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 5px grey; \n  border-radius: 6px;\n}\n \n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #3037e8; \n  border-radius: 6px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #3037e8; \n}\n\n\n.nr-dashboard-theme .nr-dashboard-form {    \n    overflow: hidden;\n    \n}\n\n.nr-dashboard-theme .nr-dashboard-form-button {\n    \n    max-height: 40px;\n}\n\n.padd {\n    \n    padding: 10px;\n    padding-top: 10px;\n}\n\na {\n    color: #97b1eb;\n    text-decoration: none;\n    font-size: large;\n}\n    \n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n.nr-dashboard-textinput md-input-container .md-input {\n    text-align: right;\n}\n\n\nmd-list-item {\n    min-height: 40px;\n    height: 40px;\n}\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n.nr-dashboard-gauge-titlel {\n    padding-top: 8px;\n}\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n \nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 8px;\n    border: 1px solid var(--color-widget-border);\n    padding-top: 0px;\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 8px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n/*\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n*/\n\n/*\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n*/\n\n\n/*\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n*/\n\n/*\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n*/\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 200,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6bdfe8ca.9acdc8",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "\nif (msg.payload==-1) { msg.payload = \" \"; } \nelse { msg.payload = \" \" + msg.icons + \"<small> LTE</small> \"; }\n\n\nvar states = global.get(\"states\") || {};\nfor (var d in states) {\n    \n    msg.payload += '&nbsp;<span class=\"dot\" style=\"background-color: ' + states[d][\"colour\"] + ';\"></span>';  \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 300,
        "wires": [
            [
                "ca5e7262b706a5c5"
            ]
        ]
    },
    {
        "id": "f8e46140.ea35",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "e6210b42.32c588",
        "name": "Browser Template",
        "order": 0,
        "width": "12",
        "height": "7",
        "format": "<br>\n<p>To return to this screen from any opened window, drag the screen to the right.</p>\n<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "padd",
        "x": 910,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "1ac2bb60.571305",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "nodeId",
                "v": "node",
                "vt": "global"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 290,
        "y": 1100,
        "wires": [
            [
                "f05a78b8.3b4008"
            ]
        ]
    },
    {
        "id": "b68d58a9.a159e8",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "Browser Links",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<br>\n<p>To return to this screen from any opened window, drag the screen from left to right.</p>\n<br><br>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshat1.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none\">Temperature Inputs</a>\n<br>\n<p>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatfr.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none\">Flow & Return Temperatures</a> \n&nbsp;\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatfr2.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none&bg=hip-square.png\">Values Only</a>\n&nbsp;\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatfr3.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none&bg=hip-square.png\">Colour</a>\n</p><br>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatdp.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none\">Differential Pressure & Temperatures</a>\n</p><br>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/twinplatehiu.svg&show=local//{{hiuId}}//&update=5&network=local&idlist={{hiuId}}&zoom=none\">HIU Dashboard</a>\n</p><br>\n<a  href=\"https://grafana-swanseashed-heatweb-0001.aivencloud.com/d/GbYq2JKop/operation?orgId=4&refresh=1m\">Swansea Grafana</a>",
        "output": "str",
        "x": 660,
        "y": 1100,
        "wires": [
            [
                "f8e46140.ea35",
                "c0e2230c.a95e7"
            ]
        ]
    },
    {
        "id": "f05a78b8.3b4008",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "Find HIU",
        "func": "\nmsg.hiuId=global.get(\"node\");\n\nvar n = global.get(\"localNetworkId\") ;\n    \n    for (var dev in global.get(\"readings.\"+n)) {\n        \n        var dt = global.get(\"readings.\"+n+\".\"+dev+\".system.deviceType.value\") || \"\";\n        \n        if (dt.toLowerCase().indexOf(\"hiu\")>-1) { msg.hiuId = dev;  break;}\n    }\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1100,
        "wires": [
            [
                "b68d58a9.a159e8"
            ]
        ]
    },
    {
        "id": "c0e2230c.a95e7",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1140,
        "wires": []
    },
    {
        "id": "82ce3805.6ac268",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 760,
        "y": 180,
        "wires": [
            [
                "9d2f9b63.8f9228"
            ]
        ]
    },
    {
        "id": "93890c7b.ea7f3",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "connect",
        "x": 780,
        "y": 120,
        "wires": [
            [
                "9d2f9b63.8f9228"
            ]
        ]
    },
    {
        "id": "444f8e15b3e99d1a",
        "type": "trigger",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "8e16bcc.c4a414"
            ]
        ]
    },
    {
        "id": "8885dd34240c9d6f",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-1",
        "payloadType": "num",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "444f8e15b3e99d1a"
            ]
        ]
    },
    {
        "id": "ca5e7262b706a5c5",
        "type": "mqtt out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "topic": "html/headerIcons",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7ad2997b.42a908",
        "x": 1190,
        "y": 300,
        "wires": []
    },
    {
        "id": "3e283cd4.ba17d4",
        "type": "comment",
        "z": "c376bc72122fb9a2",
        "name": "INTERNET CONNECTIN WATCHDOG",
        "info": "",
        "x": 230,
        "y": 160,
        "wires": []
    },
    {
        "id": "9abe6fd2.97b23",
        "type": "link out",
        "z": "c376bc72122fb9a2",
        "name": "",
        "mode": "link",
        "links": [
            "24ebaea5.b9caa2"
        ],
        "x": 1025,
        "y": 560,
        "wires": []
    },
    {
        "id": "bb5d90aa9b8b8de4",
        "type": "inject",
        "z": "c376bc72122fb9a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 680,
        "wires": [
            [
                "a1c4cbe2b8ce9045"
            ]
        ]
    },
    {
        "id": "a1c4cbe2b8ce9045",
        "type": "function",
        "z": "c376bc72122fb9a2",
        "name": "internet alarms",
        "func": "var lastin = flow.get(\"lastInternet\") || 0;\n\nvar timin = new Date().getTime();\n\nvar age = (timin - lastin)/1000;\n\nmsg.topic = \"alarm/internet\";\nmsg.title = \"Internet connection\";\nif (age < 60) { msg.payload = \"ok\"; }\nelse { msg.payload = \"Warning, no internet\"; }\n\n\n// var msg2 = {};\n// msg2.topic = \"alarm/modemLTE\";\n// msg2.title = \"Modem LTE 4G connection\";\n// var online = flow.get(\"online\") || false;\n// if (msg.payload !== \"ok\") { msg2.payload = \"No modem response\";  }\n// else if (online==true) { msg2.payload = \"ok\"; }\n// else { msg2.payload = \"No LTE connection\"; }\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 680,
        "wires": [
            [
                "392d126135d185ae",
                "a23b0b16b75dd81a"
            ]
        ]
    },
    {
        "id": "392d126135d185ae",
        "type": "link out",
        "z": "c376bc72122fb9a2",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 555,
        "y": 680,
        "wires": []
    },
    {
        "id": "3b81355f577c5ed0",
        "type": "ip",
        "z": "c376bc72122fb9a2",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 330,
        "y": 80,
        "wires": [
            [
                "cdbc661df0f64861"
            ]
        ]
    },
    {
        "id": "7c78ffbdf659f35e",
        "type": "inject",
        "z": "c376bc72122fb9a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "3b81355f577c5ed0"
            ]
        ]
    },
    {
        "id": "7c19b43c9e35470c",
        "type": "ping",
        "z": "c376bc72122fb9a2",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "www.google.com",
        "timer": "60",
        "inputs": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "e8a0adf8d3662d5a"
            ]
        ]
    },
    {
        "id": "2b5da55513cf3da9",
        "type": "debug",
        "z": "c376bc72122fb9a2",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 200,
        "wires": []
    },
    {
        "id": "e8a0adf8d3662d5a",
        "type": "switch",
        "z": "c376bc72122fb9a2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "2b5da55513cf3da9",
                "2a7c2a3a1af9fe08",
                "62db721746cacbda"
            ],
            [
                "cbdb2531bff11977"
            ]
        ]
    },
    {
        "id": "1f143b7f9354cff9",
        "type": "trigger",
        "z": "c376bc72122fb9a2",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "b7e344da84a4db3a",
                "c727a7485e9d0f98"
            ]
        ]
    },
    {
        "id": "b7e344da84a4db3a",
        "type": "delay",
        "z": "c376bc72122fb9a2",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1060,
        "y": 760,
        "wires": [
            [
                "5e084cb5a68b6a5a"
            ]
        ]
    },
    {
        "id": "c727a7485e9d0f98",
        "type": "function",
        "z": "c376bc72122fb9a2",
        "name": "rebootCountNoInternet",
        "func": "msg.topic = \"set/rebootCountNoInternet\";\nmsg.title = \"No Internet Reboot Counter\";\n\nmsg.payload = global.get(\"settings.rebootCountNoInternet.value\") || 0;\n\nmsg.payload = parseInt(msg.payload) + 1;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 820,
        "wires": [
            [
                "f35f2c270fa6bc6f"
            ]
        ]
    },
    {
        "id": "10ee4216045b7731",
        "type": "link out",
        "z": "c376bc72122fb9a2",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1305,
        "y": 280,
        "wires": []
    },
    {
        "id": "5e084cb5a68b6a5a",
        "type": "exec",
        "z": "c376bc72122fb9a2",
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1260,
        "y": 760,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2a7c2a3a1af9fe08",
        "type": "change",
        "z": "c376bc72122fb9a2",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "1f143b7f9354cff9",
                "cbdb2531bff11977",
                "ba45d07273865a3c",
                "0c4205ed9aee068c"
            ]
        ]
    },
    {
        "id": "cbdb2531bff11977",
        "type": "trigger",
        "z": "c376bc72122fb9a2",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "ba45d07273865a3c",
                "c10c40ea6363c0f7",
                "9856e52b00f498ce"
            ]
        ]
    },
    {
        "id": "c10c40ea6363c0f7",
        "type": "exec",
        "z": "c376bc72122fb9a2",
        "command": "sudo /sbin/ifdown 'wlan0'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1120,
        "y": 400,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ba45d07273865a3c",
        "type": "delay",
        "z": "c376bc72122fb9a2",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 820,
        "y": 480,
        "wires": [
            [
                "784529a4899cd05a",
                "0c4205ed9aee068c"
            ]
        ]
    },
    {
        "id": "784529a4899cd05a",
        "type": "exec",
        "z": "c376bc72122fb9a2",
        "command": "sudo /sbin/ifup --force 'wlan0'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1130,
        "y": 480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9856e52b00f498ce",
        "type": "function",
        "z": "c376bc72122fb9a2",
        "name": "resetWlanCount",
        "func": "msg.topic = \"set/resetWlanCount\";\nmsg.title = \"No Internet Reset WLAN Counter\";\n\nmsg.payload = global.get(\"settings.resetWlanCount.value\") || 0;\n\nmsg.payload = parseInt(msg.payload) + 1;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 340,
        "wires": [
            [
                "10ee4216045b7731",
                "723dd3dd7f64f357"
            ]
        ]
    },
    {
        "id": "3ef4452776398bf2",
        "type": "function",
        "z": "c376bc72122fb9a2",
        "name": "pingInternetMs",
        "func": "msg.topic = \"system/pingInternetMs\";\nmsg.title = \"Ping Internet Time\";\nmsg.units = \"ms\";\n\nflow.set(\"lastInternet\", new Date().getTime());\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 240,
        "wires": [
            [
                "1d8ef88d8c83d435",
                "a9ab84422ff80e3e"
            ]
        ]
    },
    {
        "id": "1d8ef88d8c83d435",
        "type": "link out",
        "z": "c376bc72122fb9a2",
        "name": "",
        "links": [
            "72fc070f.39dd8",
            "d72c7804b3a94dfe"
        ],
        "x": 935,
        "y": 240,
        "wires": []
    },
    {
        "id": "723dd3dd7f64f357",
        "type": "debug",
        "z": "c376bc72122fb9a2",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 340,
        "wires": []
    },
    {
        "id": "4b1e289eac95eb5f",
        "type": "ping",
        "z": "c376bc72122fb9a2",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "www.heatweb.co.uk",
        "timer": "60",
        "inputs": 0,
        "x": 170,
        "y": 340,
        "wires": [
            [
                "e8a0adf8d3662d5a"
            ]
        ]
    },
    {
        "id": "62db721746cacbda",
        "type": "smooth",
        "z": "c376bc72122fb9a2",
        "name": "",
        "property": "payload",
        "action": "min",
        "count": "2",
        "round": "",
        "mult": "single",
        "reduce": true,
        "x": 620,
        "y": 240,
        "wires": [
            [
                "3ef4452776398bf2"
            ]
        ]
    },
    {
        "id": "a9ab84422ff80e3e",
        "type": "debug",
        "z": "c376bc72122fb9a2",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 200,
        "wires": []
    },
    {
        "id": "3ad66318e6ac6780",
        "type": "ping",
        "z": "c376bc72122fb9a2",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "192.168.0.1",
        "timer": "60",
        "inputs": 0,
        "x": 150,
        "y": 440,
        "wires": [
            [
                "cc90a7588d29413d",
                "ea4c0b61d13bad65"
            ]
        ]
    },
    {
        "id": "cc90a7588d29413d",
        "type": "switch",
        "z": "c376bc72122fb9a2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "2a7c2a3a1af9fe08"
            ],
            []
        ]
    },
    {
        "id": "ea4c0b61d13bad65",
        "type": "debug",
        "z": "c376bc72122fb9a2",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 500,
        "wires": []
    },
    {
        "id": "6b0ead44e170ac28",
        "type": "ping",
        "z": "c376bc72122fb9a2",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "192.168.1.1",
        "timer": "60",
        "inputs": 0,
        "x": 150,
        "y": 500,
        "wires": [
            [
                "cc90a7588d29413d",
                "ea4c0b61d13bad65"
            ]
        ]
    },
    {
        "id": "fea93495307d63f3",
        "type": "comment",
        "z": "c376bc72122fb9a2",
        "name": "Loss of internet connectivity triggers countdown to reset ",
        "info": "",
        "x": 280,
        "y": 240,
        "wires": []
    },
    {
        "id": "8d3f272a40031d15",
        "type": "comment",
        "z": "c376bc72122fb9a2",
        "name": "LAN Connectivity prevents reset",
        "info": "",
        "x": 210,
        "y": 400,
        "wires": []
    },
    {
        "id": "cdbc661df0f64861",
        "type": "function",
        "z": "c376bc72122fb9a2",
        "name": "",
        "func": "\n\nvar msg1 = { topic: \"system/ipLan\", payload: msg.payload.internalIPv4 || \"false\" }\n\nmsg.topic = \"system/ipWan\";\nmsg.payload = msg.payload.publicIPv4 || \"false\" ;\n\n\nreturn [msg,msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 80,
        "wires": [
            [
                "ca1358f93e7b6dc8"
            ],
            [
                "ca1358f93e7b6dc8"
            ]
        ]
    },
    {
        "id": "ca1358f93e7b6dc8",
        "type": "link out",
        "z": "c376bc72122fb9a2",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 685,
        "y": 80,
        "wires": []
    },
    {
        "id": "0c4205ed9aee068c",
        "type": "trigger",
        "z": "c376bc72122fb9a2",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "90",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 830,
        "y": 560,
        "wires": [
            [
                "9abe6fd2.97b23",
                "d41fd4714443ef23"
            ]
        ]
    },
    {
        "id": "f35f2c270fa6bc6f",
        "type": "link out",
        "z": "c376bc72122fb9a2",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1295,
        "y": 820,
        "wires": []
    },
    {
        "id": "d41fd4714443ef23",
        "type": "trigger",
        "z": "c376bc72122fb9a2",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 830,
        "y": 660,
        "wires": [
            [
                "1f143b7f9354cff9",
                "99bb7f82081d21dd"
            ]
        ]
    },
    {
        "id": "99bb7f82081d21dd",
        "type": "exec",
        "z": "c376bc72122fb9a2",
        "command": "sudo service networking restart",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1150,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d72c7804b3a94dfe",
        "type": "link in",
        "z": "c376bc72122fb9a2",
        "name": "link in 1",
        "links": [
            "1d8ef88d8c83d435"
        ],
        "x": 265,
        "y": 620,
        "wires": [
            [
                "a1c4cbe2b8ce9045"
            ]
        ]
    },
    {
        "id": "a23b0b16b75dd81a",
        "type": "debug",
        "z": "c376bc72122fb9a2",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 760,
        "wires": []
    },
    {
        "id": "3ccf6b40.057534",
        "type": "ui_text",
        "z": "d26c3be6.b5ef58",
        "group": "cb203bcb.f1ec68",
        "order": 1,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "LAN IP Address",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 540,
        "y": 460,
        "wires": []
    },
    {
        "id": "fbc3ab38.2e80e8",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 460,
        "wires": [
            [
                "b70b897d.314328"
            ]
        ]
    },
    {
        "id": "b70b897d.314328",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "func": "\nmsg.payload = global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_1_ip4.value\") ||  global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_2_ip4.value\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 460,
        "wires": [
            [
                "3ccf6b40.057534"
            ]
        ]
    },
    {
        "id": "5f94911c.24a54",
        "type": "ui_text",
        "z": "d26c3be6.b5ef58",
        "group": "cb203bcb.f1ec68",
        "order": 3,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "Identity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 520,
        "y": 400,
        "wires": []
    },
    {
        "id": "d5c0bd4b.23571",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "bc743a6c.843208"
            ]
        ]
    },
    {
        "id": "bc743a6c.843208",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "func": "\nmsg.payload = global.get(\"networkId\") + \" / \" + global.get(\"node\") ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 400,
        "wires": [
            [
                "5f94911c.24a54"
            ]
        ]
    },
    {
        "id": "7671fe52.7dd1b",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "Rotate Screen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "60eac61d.347078"
            ]
        ]
    },
    {
        "id": "60eac61d.347078",
        "type": "file in",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "filename": "/boot/config.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 240,
        "wires": [
            [
                "abd68b9d.1e2288"
            ]
        ]
    },
    {
        "id": "209a5b3.ceb89a4",
        "type": "split",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 340,
        "wires": [
            [
                "4cbbf15a.e1f5f"
            ]
        ]
    },
    {
        "id": "4cbbf15a.e1f5f",
        "type": "switch",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "lcd_rotate=2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 400,
        "wires": [
            [
                "5a570147.818fb",
                "bda08c25.bf0b9"
            ]
        ]
    },
    {
        "id": "bda08c25.bf0b9",
        "type": "debug",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "5a570147.818fb",
        "type": "switch",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "#lcd",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "92b93d30.932fe"
            ],
            [
                "1835b27a.3a211e"
            ]
        ]
    },
    {
        "id": "bf20d69a.90b028",
        "type": "trigger",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1320,
        "y": 600,
        "wires": [
            [
                "423c266c.16d6f8"
            ]
        ]
    },
    {
        "id": "c8b0429c.3a7c5",
        "type": "debug",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "active": false,
        "console": false,
        "complete": "false",
        "x": 1310,
        "y": 660,
        "wires": []
    },
    {
        "id": "423c266c.16d6f8",
        "type": "exec",
        "z": "d26c3be6.b5ef58",
        "command": "bash",
        "addpay": false,
        "append": "/home/pi/lcd_rotate.sh",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1450,
        "y": 600,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "abd68b9d.1e2288",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "configtxt",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "209a5b3.ceb89a4"
            ]
        ]
    },
    {
        "id": "1835b27a.3a211e",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "configtxt",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "lcd_rotate",
                "fromt": "str",
                "to": "#lcd_rotate",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 500,
        "wires": [
            [
                "111b3535.defdfb"
            ]
        ]
    },
    {
        "id": "92b93d30.932fe",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "configtxt",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "#lcd_rotate",
                "fromt": "str",
                "to": "lcd_rotate",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 460,
        "wires": [
            [
                "111b3535.defdfb"
            ]
        ]
    },
    {
        "id": "111b3535.defdfb",
        "type": "file",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "filename": "/home/pi/config.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1190,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "3487cfb8.28fdf",
        "type": "ui_text_input",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "label": "System Name",
        "tooltip": "e.g. St.Trinians",
        "group": "cb203bcb.f1ec68",
        "order": 8,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": "5000",
        "topic": "set/name",
        "topicType": "str",
        "x": 520,
        "y": 640,
        "wires": [
            [
                "93e55623.1ae628"
            ]
        ]
    },
    {
        "id": "c346ae2f.2c43e",
        "type": "ui_template",
        "z": "d26c3be6.b5ef58",
        "d": true,
        "group": "36b47e47.04f1c2",
        "name": "Virtual Keyboard",
        "order": 5,
        "width": "3",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button class=\"VK\" style=\"display:none\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "efc92398.82dbf",
        "type": "ui_text_input",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "label": "Email Address",
        "tooltip": "",
        "group": "cb203bcb.f1ec68",
        "order": 9,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "email",
        "delay": "5000",
        "topic": "set/email",
        "topicType": "str",
        "x": 520,
        "y": 680,
        "wires": [
            [
                "bbcdf11f.f906a"
            ]
        ]
    },
    {
        "id": "47a69ad7.0a5b94",
        "type": "ui_text_input",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "label": "Alarm Temperature",
        "tooltip": "",
        "group": "cb203bcb.f1ec68",
        "order": 10,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": "5000",
        "topic": "set/tAlarm",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 720,
        "wires": [
            [
                "cd030cb5.b6dcf"
            ]
        ]
    },
    {
        "id": "bf47904.d275a7",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 640,
        "wires": [
            [
                "ee777bb4.05aa88",
                "f8a0f6f2.95b158",
                "343dbd59.0f0e52"
            ]
        ]
    },
    {
        "id": "ee777bb4.05aa88",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "tAlarm",
        "func": "msg.payload = parseFloat(global.get(\"settings.tAlarm.value\") || 55);\nmsg.topic = \"set/tAlarm\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 720,
        "wires": [
            [
                "47a69ad7.0a5b94",
                "bc8363a8.8fcbe"
            ]
        ]
    },
    {
        "id": "cd030cb5.b6dcf",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/tAlarm",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "msg",
                "to": "°C",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Alarm temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 720,
        "wires": [
            [
                "e44a91c9.939dc",
                "10386a58.ef2e16"
            ]
        ]
    },
    {
        "id": "bbcdf11f.f906a",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/email",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Email address for alarms",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 680,
        "wires": [
            [
                "e44a91c9.939dc",
                "10386a58.ef2e16",
                "3ca1cdfc.ddcb12"
            ]
        ]
    },
    {
        "id": "93e55623.1ae628",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/title",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "System name",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 640,
        "wires": [
            [
                "e44a91c9.939dc",
                "10386a58.ef2e16"
            ]
        ]
    },
    {
        "id": "e44a91c9.939dc",
        "type": "link out",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1035,
        "y": 640,
        "wires": []
    },
    {
        "id": "f8a0f6f2.95b158",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "name",
        "func": "msg.payload = global.get(\"settings.title.value\") || global.get(\"iotnode\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 640,
        "wires": [
            [
                "3487cfb8.28fdf"
            ]
        ]
    },
    {
        "id": "343dbd59.0f0e52",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "email",
        "func": "msg.payload = global.get(\"settings.email.value\") || \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "efc92398.82dbf"
            ]
        ]
    },
    {
        "id": "cfa092d4.4a897",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "post changes",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "cmd/request",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "local/+/+/settings/#",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 720,
        "wires": [
            [
                "e44a91c9.939dc"
            ]
        ]
    },
    {
        "id": "10386a58.ef2e16",
        "type": "trigger",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 990,
        "y": 760,
        "wires": [
            [
                "cfa092d4.4a897"
            ]
        ]
    },
    {
        "id": "ea82bc01.ed0f6",
        "type": "ui_ui_control",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "6aac662b.dcf9e8",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"hide\":\"Setup\"}}",
        "payloadType": "json",
        "x": 180,
        "y": 860,
        "wires": [
            [
                "ea82bc01.ed0f6"
            ]
        ]
    },
    {
        "id": "f8a1c186.e772c",
        "type": "ui_template",
        "z": "d26c3be6.b5ef58",
        "group": "db644eb4.b9d0a",
        "name": "css etc",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<style>\n\n   .md-button {\n        text-transform: none;\n    }\n    .myB {\n        box-shadow: 2px 2px 2px grey;\n        padding: 1px 8px 0px 8px;\n        width: 100%;\n    }\n    .tdLS {\n        padding: 0px 8px 0px 0px;\n    }\n  .filled { \n      height: 100% !important;\n\n      padding: 0 !important;\n      margin: 0 !important;\n  }\n  .nr-dashboard-template {\n      padding: 0;\n      margin: 0;\n  }\n  \n  .rounded {\n  border-radius: 6px 6px 6px 6px;\n}\n \n   .bigfont {\n  font-size: 18px;\n}\n\n   .smallfont {\n  font-size: 12px;\n}\n.smB { \n    width: 100px;\n    display: inline-block;\n}\n.thinB { \n    height: 20px;\n    0px 0px 0px 0px;\n}\n.maxsiz {\n\n    width: 100%; \n    height: 100%;\n\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "x": 290,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "2c37422a.c4432e",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"show\":\"Setup\"}}",
        "payloadType": "json",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "ea82bc01.ed0f6"
            ]
        ]
    },
    {
        "id": "3ca1cdfc.ddcb12",
        "type": "trigger",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 990,
        "y": 840,
        "wires": [
            [
                "334db306.ec4e5c"
            ]
        ]
    },
    {
        "id": "334db306.ec4e5c",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "attach",
        "func": "msg.to = msg.payload;\n\nmsg.payload=\"Update from \"+global.get(\"node\");\nmsg.topic=\"Change of email on \"+global.get(\"node\");\n\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 900,
        "wires": [
            [
                "162d2a4d.5abdb6"
            ]
        ]
    },
    {
        "id": "162d2a4d.5abdb6",
        "type": "link out",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "links": [
            "4bf50365.a06d4c",
            "a1744584.91173"
        ],
        "x": 1175,
        "y": 900,
        "wires": []
    },
    {
        "id": "16bba053.442da",
        "type": "ui_text",
        "z": "d26c3be6.b5ef58",
        "group": "cb203bcb.f1ec68",
        "order": 2,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "WAN IP Address",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 540,
        "y": 500,
        "wires": []
    },
    {
        "id": "c01b8f85.fe258",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "98ca4c9d.3b46"
            ]
        ]
    },
    {
        "id": "98ca4c9d.3b46",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "func": "\nmsg.payload = global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".system.ipWan.value\") || \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 500,
        "wires": [
            [
                "16bba053.442da"
            ]
        ]
    },
    {
        "id": "bc8363a8.8fcbe",
        "type": "debug",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 780,
        "wires": []
    },
    {
        "id": "4c0c2dc2.b27d04",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "apee4ooF",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "apee4ooF",
        "payloadType": "str",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "a21187af.21a728"
            ]
        ]
    },
    {
        "id": "a21187af.21a728",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "Nodeware",
        "func": "global.set(\"Nodeware\", \"tihat_v01.08.22\") ; \n\nmsg.payload = global.get(\"Nodeware\") ; \nmsg.topic = \"system/Nodeware\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 160,
        "wires": [
            [
                "ae865c20.2fec3"
            ]
        ]
    },
    {
        "id": "2f4faaf.de84556",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "BACKUP SOFTWARE",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "a21187af.21a728",
                "188d04eb.5e61ab"
            ]
        ]
    },
    {
        "id": "188d04eb.5e61ab",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "5d1caef7.6d7ca"
            ]
        ]
    },
    {
        "id": "5d1caef7.6d7ca",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "attach",
        "func": "msg.payload=\"Software Backup attached from \"+global.get(\"node\");\nmsg.topic=\"Node-RED Software Backup from \"+global.get(\"node\");\nvar nw = \"flows_ihiu_\" + global.get(\"Nodeware\") || \"\";\nmsg.attachments = [{   // utf-8 string as an attachment \n            filename:  nw + '.json',\n            path: '/home/pi/.node-red/flows_ihiu.json'\n        },\n        {   // utf-8 string as an attachment \n            filename: nw + '_cred.json',\n            path: '/home/pi/.node-red/flows_ihiu_cred.json'\n        },\n        {   // utf-8 string as an attachment \n            filename: 'settings.js',\n            path: '/home/pi/.node-red/settings.js'\n        }];\n\nmsg.to=\"setup@heatweb.com, nodered@heatweb.com\";\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "9c5f6a01.7abfd8"
            ]
        ]
    },
    {
        "id": "9c5f6a01.7abfd8",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "4bf50365.a06d4c",
            "a1744584.91173"
        ],
        "x": 795,
        "y": 100,
        "wires": []
    },
    {
        "id": "2eb67577.c3d0f2",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "pwgen -B -1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 590,
        "y": 400,
        "wires": [
            [
                "60f2a12c.9ad8d",
                "c21e8eff.725fa"
            ],
            [],
            []
        ]
    },
    {
        "id": "2d9e199.d1e7066",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "Refresh Random",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "afe11f5a.15ac2"
            ]
        ]
    },
    {
        "id": "60f2a12c.9ad8d",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 360,
        "wires": []
    },
    {
        "id": "c21e8eff.725fa",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "newnode",
        "func": "msg.payload = msg.payload.trim();\n\nflow.set(\"newnode\", msg.payload);\nflow.set(\"newnetwork\", msg.payload + \"-\" + msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a1744584.91173",
        "type": "link in",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "9c5f6a01.7abfd8",
            "162d2a4d.5abdb6",
            "8e2f7245.7dc94",
            "330292c9.7440ae",
            "ce07b36ff1b6b4ca"
        ],
        "x": 385,
        "y": 260,
        "wires": [
            [
                "f933bdc8a3b48903"
            ]
        ]
    },
    {
        "id": "65658ff.e75c27",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 180,
        "wires": [
            [
                "6f4f1505.582314"
            ]
        ]
    },
    {
        "id": "6f4f1505.582314",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1490,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "aa3585f1.9ded8",
        "type": "file in",
        "z": "caf59ec6.61c85",
        "name": "",
        "filename": "/etc/hostname",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 600,
        "y": 460,
        "wires": [
            [
                "f92c39c.55b0848"
            ]
        ]
    },
    {
        "id": "f92c39c.55b0848",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "hostname",
        "func": "flow.set(\"hostname\",msg.payload.trim());\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "38cc9c30.d04654",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1520,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bdad4049.b8d448",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 280,
        "wires": [
            [
                "38cc9c30.d04654"
            ]
        ]
    },
    {
        "id": "e97fbed5.80f718",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo node-red-restart",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1520,
        "y": 340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5fcf0e85.427da8",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 340,
        "wires": [
            [
                "e97fbed5.80f718"
            ]
        ]
    },
    {
        "id": "ae865c20.2fec3",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 555,
        "y": 160,
        "wires": []
    },
    {
        "id": "5d64f9af.79a558",
        "type": "comment",
        "z": "caf59ec6.61c85",
        "name": "",
        "info": "https://itnext.io/raspberry-pi-read-only-kiosk-mode-the-complete-tutorial-for-2021-58a860474215",
        "x": 1680,
        "y": 40,
        "wires": []
    },
    {
        "id": "6b9176cd.8d5378",
        "type": "template",
        "z": "caf59ec6.61c85",
        "name": "rofs",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "mustache",
        "template": "#!/bin/sh\n\n#  Read-only Root-FS for Raspian using overlayfs\n#  Version 1.1:\n#  Changed to use /proc/mounts rathern than /etc/fstab for deriving the root filesystem.\n#\n#  Version 1:\n#  Created 2017 by Pascal Suter @ DALCO AG, Switzerland to work on Raspian as custom init script\n#  (raspbian does not use an initramfs on boot)\n#\n#  This program is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#    You should have received a copy of the GNU General Public License\n#    along with this program.  If not, see\n#    <http://www.gnu.org/licenses/>.\n#\n#\n#  Tested with Raspbian mini, 2017-01-11\n#\n#  This script will mount the root filesystem read-only and overlay it with a temporary tempfs \n#  which is read-write mounted. This is done using the overlayFS which is part of the linux kernel \n#  since version 3.18. \n#  when this script is in use, all changes made to anywhere in the root filesystem mount will be lost \n#  upon reboot of the system. The SD card will only be accessed as read-only drive, which significantly\n#  helps to prolong its life and prevent filesystem coruption in environments where the system is usually\n#  not shut down properly \n#\n#  Install: \n#  copy this script to /sbin/overlayRoot.sh and add \"init=/sbin/overlayRoot.sh\" to the cmdline.txt \n#  file in the raspbian image's boot partition. \n#  I strongly recommend to disable swapping before using this. it will work with swap but that just does \n#  not make sens as the swap file will be stored in the tempfs which again resides in the ram.\n#  run these commands on the booted raspberry pi BEFORE you set the init=/sbin/overlayRoot.sh boot option:\n#  sudo dphys-swapfile swapoff\n#  sudo dphys-swapfile uninstall\n#  sudo update-rc.d dphys-swapfile remove\n#\n#  To install software, run upgrades and do other changes to the raspberry setup, simply remove the init= \n#  entry from the cmdline.txt file and reboot, make the changes, add the init= entry and reboot once more. \n \nfail(){\n\techo -e \"$1\"\n\t/bin/bash\n}\n \n# load module\nmodprobe overlay\nif [ $? -ne 0 ]; then\n    fail \"ERROR: missing overlay kernel module\"\nfi\n# mount /proc\nmount -t proc proc /proc\n\n# create a writable fs to then create our mountpoints \nmount -t tmpfs inittemp /mnt\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not create a temporary filesystem to mount the base filesystems for overlayfs\"\nfi\nmkdir /mnt/lower\nmkdir /mnt/rw\nmount -t tmpfs root-rw /mnt/rw\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not create tempfs for upper filesystem\"\nfi\nmkdir /mnt/rw/upper\nmkdir /mnt/rw/work\nmkdir /mnt/newroot\n\n# mount root filesystem readonly \nrootDev=`awk '$2 == \"/\" {print $1}' /proc/mounts`\nrootMountOpt=`awk '$2 == \"/\" {print $4}' /proc/mounts`\nrootFsType=`awk '$2 == \"/\" {print $3}' /proc/mounts`\nmount -t ${rootFsType} -o ${rootMountOpt},ro ${rootDev} /mnt/lower\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not ro-mount original root partition\"\nfi\nmount -t overlay -o lowerdir=/mnt/lower,upperdir=/mnt/rw/upper,workdir=/mnt/rw/work overlayfs-root /mnt/newroot\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not mount overlayFS\"\nfi\n# create mountpoints inside the new root filesystem-overlay\nmkdir /mnt/newroot/ro\nmkdir /mnt/newroot/rw\n# remove root mount from fstab (this is already a non-permanent modification)\ngrep -v \"$rootDev\" /mnt/lower/etc/fstab > /mnt/newroot/etc/fstab\necho \"#the original root mount has been removed by overlayRoot.sh\" >> /mnt/newroot/etc/fstab\necho \"#this is only a temporary modification, the original fstab\" >> /mnt/newroot/etc/fstab\necho \"#stored on the disk can be found in /ro/etc/fstab\" >> /mnt/newroot/etc/fstab\n# change to the new overlay root\ncd /mnt/newroot\npivot_root . mnt\nexec chroot . sh -c \"$(cat <<END\n# move ro and rw mounts to the new root\nmount --move /mnt/mnt/lower/ /ro\nif [ $? -ne 0 ]; then\n    echo \"ERROR: could not move ro-root into newroot\"\n    /bin/bash\nfi\nmount --move /mnt/mnt/rw /rw\nif [ $? -ne 0 ]; then\n    echo \"ERROR: could not move tempfs rw mount into newroot\"\n    /bin/bash\nfi\n# unmount unneeded mounts so we can unmout the old readonly root\numount /mnt/mnt\numount /mnt/proc\numount -l -f /mnt/dev\numount -l -f /mnt\n# continue with regular init\nexec /sbin/init\nEND\n)\"\n",
        "output": "str",
        "x": 1690,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "afe11f5a.15ac2",
        "type": "change",
        "z": "caf59ec6.61c85",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "2eb67577.c3d0f2",
                "aa3585f1.9ded8"
            ]
        ]
    },
    {
        "id": "54864e96.ab682",
        "type": "link in",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "9bd2209.563a4e"
        ],
        "x": 255,
        "y": 480,
        "wires": [
            [
                "afe11f5a.15ac2"
            ]
        ]
    },
    {
        "id": "e0e0515a.86385",
        "type": "ui_button",
        "z": "caf59ec6.61c85",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Shutdown now",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 240,
        "wires": [
            [
                "6803aeb1.a8f08"
            ]
        ]
    },
    {
        "id": "6803aeb1.a8f08",
        "type": "ui_toast",
        "z": "caf59ec6.61c85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 240,
        "wires": [
            [
                "3b18b185.0cc4fe"
            ]
        ]
    },
    {
        "id": "3b18b185.0cc4fe",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 240,
        "wires": [
            [
                "38cc9c30.d04654"
            ],
            []
        ]
    },
    {
        "id": "aae309cc.38b1f8",
        "type": "ui_button",
        "z": "caf59ec6.61c85",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Reboot now",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 140,
        "wires": [
            [
                "bad6cbe2.1ffd48"
            ]
        ]
    },
    {
        "id": "bad6cbe2.1ffd48",
        "type": "ui_toast",
        "z": "caf59ec6.61c85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "2b8db478.456f1c"
            ]
        ]
    },
    {
        "id": "2b8db478.456f1c",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 140,
        "wires": [
            [
                "6f4f1505.582314"
            ],
            []
        ]
    },
    {
        "id": "8bd72823.48ffa8",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "906024b7.9e3e48",
            "96558a40.5d4f48"
        ],
        "x": 1095,
        "y": 300,
        "wires": []
    },
    {
        "id": "dd75b998.3e21f8",
        "type": "ui_button",
        "z": "caf59ec6.61c85",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Screen Off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "cmd:screenoff",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 970,
        "y": 300,
        "wires": [
            [
                "8bd72823.48ffa8"
            ]
        ]
    },
    {
        "id": "f3e7f125f704571f",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo service --status-all",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 370,
        "y": 720,
        "wires": [
            [
                "8bf751a05ae972a3"
            ],
            [
                "8bf751a05ae972a3"
            ],
            []
        ]
    },
    {
        "id": "e0df63888c7c8d67",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "f3e7f125f704571f"
            ]
        ]
    },
    {
        "id": "8bf751a05ae972a3",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 720,
        "wires": []
    },
    {
        "id": "fae86fdae8a260b0",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 370,
        "y": 840,
        "wires": [
            [
                "ba70b18364f6cb97"
            ]
        ]
    },
    {
        "id": "ba70b18364f6cb97",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "newnode",
        "property": "node",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "newnode",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 840,
        "wires": [
            [
                "b71148848e2bf0c4",
                "eabe8d1364d5d4d6"
            ],
            [
                "5ebfc67f51971a9b"
            ]
        ]
    },
    {
        "id": "b71148848e2bf0c4",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "NAMES",
        "func": "\n//msg.newnode = global.get(\"node\").toLowerCase();\nmsg.newnode = \"zcc\" + flow.get(\"newnode\").toLowerCase();\nmsg.newnetwork = flow.get(\"newnode\").toLowerCase();\nmsg.newgroup = \"new\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 600,
        "wires": [
            [
                "0c8e4f9ba98b5549",
                "17de64753eebbe39"
            ]
        ]
    },
    {
        "id": "eabe8d1364d5d4d6",
        "type": "change",
        "z": "caf59ec6.61c85",
        "name": "Renaming Host...",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Renaming Host...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 760,
        "wires": [
            [
                "cc301e4ec404ed45"
            ]
        ]
    },
    {
        "id": "5ebfc67f51971a9b",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "ls /etc/connect/service/",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 860,
        "y": 900,
        "wires": [
            [
                "61cd65e615237acd",
                "3d59f4f15bee38f8"
            ],
            [],
            []
        ]
    },
    {
        "id": "0c8e4f9ba98b5549",
        "type": "delay",
        "z": "caf59ec6.61c85",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 600,
        "wires": [
            [
                "ee3de00d68af001d"
            ]
        ]
    },
    {
        "id": "17de64753eebbe39",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo rm /etc/connect/service/settings.json",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1160,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "61cd65e615237acd",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "settings.json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 900,
        "wires": [
            [],
            [
                "8db53daeb38d71c9"
            ]
        ]
    },
    {
        "id": "3d59f4f15bee38f8",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 860,
        "wires": []
    },
    {
        "id": "ee3de00d68af001d",
        "type": "template",
        "z": "caf59ec6.61c85",
        "name": "newnode",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\nn=\"{{newnetwork}}\"\nb=\"{{newnode}}\"\n\nc=\"/g\"\n\nh=\"newnetwork\"\na=\"s/$h/\"\nSED_ARG=\"$a$n$c\"\necho $SED_ARG\nsudo sed -i -e $SED_ARG /boot/heatweb/config.json\n\nh=\"newnode\"\na=\"s/$h/\"\nSED_ARG=\"$a$b$c\"\necho $SED_ARG\nsudo sed -i -e $SED_ARG /boot/heatweb/config.json\n\nh=$(cat /etc/hostname)\na=\"s/$h/\"\nSED_ARG=\"$a$b$c\"\necho $SED_ARG\nsudo sed -i -e $SED_ARG /etc/hostname\nsudo sed -i -e $SED_ARG /etc/hosts\n\n\n",
        "output": "str",
        "x": 1240,
        "y": 600,
        "wires": [
            [
                "b22cdb936fef512f"
            ]
        ]
    },
    {
        "id": "8db53daeb38d71c9",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "NAMES",
        "func": "\nmsg.newnode = global.get(\"node\");\nmsg.newgroup = \"new\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 900,
        "wires": [
            [
                "ce5847766f4b0346"
            ]
        ]
    },
    {
        "id": "b22cdb936fef512f",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1370,
        "y": 600,
        "wires": [
            [
                "10009c749c3e694f",
                "adacce0945ee4d08",
                "09188e09a11c4047",
                "f74be062730bbc2b"
            ]
        ]
    },
    {
        "id": "ce5847766f4b0346",
        "type": "delay",
        "z": "caf59ec6.61c85",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1460,
        "y": 900,
        "wires": [
            [
                "3821ed536c0d82b2"
            ]
        ]
    },
    {
        "id": "10009c749c3e694f",
        "type": "file",
        "z": "caf59ec6.61c85",
        "name": "",
        "filename": "/home/pi/node-hiu-newname.sh",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1630,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "adacce0945ee4d08",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1550,
        "y": 680,
        "wires": [
            [
                "ac51970a6b1b32e9"
            ]
        ]
    },
    {
        "id": "09188e09a11c4047",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": false,
        "console": false,
        "complete": "false",
        "x": 1630,
        "y": 520,
        "wires": []
    },
    {
        "id": "f74be062730bbc2b",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "attach",
        "func": "\nvar ip = global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_1_ip4.value\") ||  global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_2_ip4.value\")\n\nmsg.payload=\"New Node \"+msg.newnode + \" on \" + ip;\nmsg.topic=\"New Node \"+msg.newnode + \" on \" + ip;\n\n\nmsg.to=\"setup@heatweb.com\";\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 560,
        "wires": [
            [
                "ce07b36ff1b6b4ca"
            ]
        ]
    },
    {
        "id": "3821ed536c0d82b2",
        "type": "template",
        "z": "caf59ec6.61c85",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "sudo wget -O - \"https://connect.jfrog.io/v2/install_connect\" | sudo sh -s HKFpL8CSxjiG8HPrcpwBY5cUpukezbRg9A heatwebremote -n={{newnode}} -g={{newgroup}}\n",
        "output": "str",
        "x": 1620,
        "y": 900,
        "wires": [
            [
                "ea6c7419d9a5790b"
            ]
        ]
    },
    {
        "id": "ac51970a6b1b32e9",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "bash",
        "addpay": false,
        "append": "/home/pi/node-hiu-newname.sh",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1680,
        "y": 680,
        "wires": [
            [
                "2410b06e6b368222",
                "4dfe5619f04e9913",
                "ebfec58fefedf84c"
            ],
            [],
            [
                "2410b06e6b368222"
            ]
        ]
    },
    {
        "id": "ce07b36ff1b6b4ca",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "4bf50365.a06d4c",
            "a1744584.91173"
        ],
        "x": 1725,
        "y": 560,
        "wires": []
    },
    {
        "id": "ea6c7419d9a5790b",
        "type": "subflow:a8d56bd2.c3c6f",
        "z": "caf59ec6.61c85",
        "name": "",
        "x": 1760,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "2410b06e6b368222",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1910,
        "y": 760,
        "wires": []
    },
    {
        "id": "4dfe5619f04e9913",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1900,
        "y": 680,
        "wires": [
            [
                "f2ca3839a6320ce7",
                "09bb118a25975493"
            ]
        ]
    },
    {
        "id": "ebfec58fefedf84c",
        "type": "change",
        "z": "caf59ec6.61c85",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Rebooting...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 580,
        "wires": [
            [
                "2b0fd762d5e46184"
            ]
        ]
    },
    {
        "id": "8d44588036dcb5d3",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 900,
        "wires": []
    },
    {
        "id": "f2ca3839a6320ce7",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "d": true,
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2140,
        "y": 680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "09bb118a25975493",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 2130,
        "y": 740,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2b0fd762d5e46184",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "3de9243a.1e77fc",
            "560266b59151de97",
            "96b46834c6db95b2"
        ],
        "x": 2035,
        "y": 580,
        "wires": []
    },
    {
        "id": "f933bdc8a3b48903",
        "type": "e-mail",
        "z": "caf59ec6.61c85",
        "server": "auth.smtp.1and1.co.uk",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 550,
        "y": 260,
        "wires": []
    },
    {
        "id": "4bccab605582143f",
        "type": "mqtt out",
        "z": "caf59ec6.61c85",
        "name": "",
        "topic": "cmd/displayMessage",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7ad2997b.42a908",
        "x": 2000,
        "y": 460,
        "wires": []
    },
    {
        "id": "96b46834c6db95b2",
        "type": "link in",
        "z": "caf59ec6.61c85",
        "name": "link in 3",
        "links": [
            "2b0fd762d5e46184",
            "cc301e4ec404ed45"
        ],
        "x": 1835,
        "y": 460,
        "wires": [
            [
                "4bccab605582143f",
                "26a2d63b51d6b083"
            ]
        ]
    },
    {
        "id": "cc301e4ec404ed45",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "3de9243a.1e77fc",
            "560266b59151de97",
            "96b46834c6db95b2"
        ],
        "x": 1315,
        "y": 760,
        "wires": []
    },
    {
        "id": "26a2d63b51d6b083",
        "type": "ui_toast",
        "z": "caf59ec6.61c85",
        "position": "top right",
        "displayTime": "20",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1990,
        "y": 400,
        "wires": []
    },
    {
        "id": "5ecd5bf0795bd642",
        "type": "inject",
        "z": "ca03066f6a7451f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "f80e2139d14010f2"
            ]
        ]
    },
    {
        "id": "3fdcb94d47bf9bff",
        "type": "link in",
        "z": "ca03066f6a7451f4",
        "name": "",
        "links": [
            "c52dea4958c2f7ea",
            "26f1ad336f82aeeb"
        ],
        "x": 835,
        "y": 100,
        "wires": [
            [
                "a9c8363a03750511",
                "49608d86828c05de"
            ]
        ]
    },
    {
        "id": "f80e2139d14010f2",
        "type": "exec",
        "z": "ca03066f6a7451f4",
        "command": "bash /home/pi/node-hiu/sq.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "sq.sh",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "92d71bc19a90ebb7"
            ],
            [],
            [
                "5225132d4929334b",
                "119c833c97aaa8ef"
            ]
        ]
    },
    {
        "id": "a9c8363a03750511",
        "type": "debug",
        "z": "ca03066f6a7451f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 100,
        "wires": []
    },
    {
        "id": "11c03d3cbc04923d",
        "type": "file",
        "z": "ca03066f6a7451f4",
        "name": "",
        "filename": "/home/pi/node-hiu/sq.sh",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 690,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "99f19987a9d79c31",
        "type": "function",
        "z": "ca03066f6a7451f4",
        "name": "",
        "func": "\n\nfunction uniq(a) {\n    var seen = {};\n    return a.filter(function(item) {\n        return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n}\n\nif (msg.payload.indexOf(\",\")<1) { return null; }\n\nvar invar = msg.payload.split(\",\");\nvar device = (invar[0].trim());\nvar terminal = (invar[1].trim());\nvar readin = parseFloat(invar[2].trim());\nvar title = (invar[3].trim());\n    \nvar msg1={};    \nmsg1.topic = device + \"/dat/\" + terminal;\nmsg1.payload = readin;\nmsg1.points = 1000;\nmsg1.units = \"\";\nmsg1.title = title;\n\nvar msg2 = {};\nmsg2.topic = device + \"/raw/\" + terminal,\nmsg2.payload = readin;\nmsg2.title = \"RAW \" + title;\nmsg2.units = \"ohms\";  \n    \nvar msg3 = { \"payload\":\"ok\"};  // alarm\nmsg3.topic = device + \"/alarm/terminal_\" + terminal;\n\n\n\n//var ntc = JSON.parse(presult[0][\"map\"]);\nvar ntc = [[42.739, -10], [27.396, 0], [17.999, 10], [12.099, 20], [10, 25], [8.308, 30], [5.819, 40], [4.151, 50], [3.012, 60], [2.221, 70], [1.663, 80], [1.262, 90], [0.97, 100], [0.755, 110]];\nmsg1.units = \"°C\";  \n\nif (terminal == \"tRPS\") {\n\n    ntc = [[0.5, 0], [3.5, 90]];  // Temperature\n    msg2.units = \"vdc\";  \n\n    if (readin < 0.5 ) {  // sensor not connected\n\n        msg1 = null;\n        msg3.payload = \"Sensor Disconnected\"\n\n    }\n\n} else if (terminal == \"pRPS\") {\n\n    ntc = [[0.5, 0], [3.5, 6]];  //  Pressure\n    msg1.units = \"bar\";\n    msg2.units = \"vdc\";  \n\n    if (readin < 0.5) {  // sensor not connected\n\n        //msg1 = null;\n        msg3.payload = \"Sensor Disconnected\"\n\n    }\n\n}  else {\n\n    if (readin==60) {  // sensor not connected\n\n        msg1 = null;\n        msg3.payload = \"Sensor Disconnected\"\n\n    }\n\n    else if (readin == 30) {  // sensor not connected\n\n        msg1 = null;\n        msg3.payload = \"Sensor Short-circuit\"\n\n    }\n\n}\n\n    if(msg1 && ntc) {\n     \n         \n        msg1.payload = \"\";\n        \n        \n        var temp = -999;\n        for (var i = 1; i < ntc.length; i++) { \n            \n            if  (ntc[i][0]==readin) { \n                \n                temp = ntc[i][1];\n                \n                break;\n            }\n            else if  (ntc[i-1][0]==readin) { \n                \n                temp = ntc[i-1][1];\n                \n                break;\n            }\n            else if  ((ntc[i-1][0]<=readin) && (ntc[i][0]>readin)) { \n                \n                temp = ntc[i-1][1] - ((ntc[i][1] - ntc[i-1][1]) * ((readin - ntc[i-1][0]) / (ntc[i-1][0] - ntc[i][0])));\n                \n                break;\n            }\n            else if  ((ntc[i-1][0]>=readin) && (ntc[i][0]<readin)) { \n                \n                temp = ntc[i-1][1] - ((ntc[i][1] - ntc[i-1][1]) * ((readin - ntc[i-1][0]) / (ntc[i-1][0] - ntc[i][0])));\n                \n                break;\n            }\n            \n        }\n         \n\n        if (temp != -999) {\n            \n            msg1.payload =  temp;            \n            \n            \n        } else {\n            \n            msg1 = null;\n            msg3.payload = \"Out of range\"\n        }\n    }\n    \n    \n    \n    if (msg1) { msg1.payload = parseInt(msg1.payload * 100) / 100;  }\n    \n    return [msg1, msg2, msg3];\n      \n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 660,
        "wires": [
            [
                "2e988386940749d8",
                "da443342a3ee7581"
            ],
            [
                "497a42acf94e3206",
                "e38c98b2bbcdae42"
            ],
            [
                "40855875df672fcf"
            ]
        ]
    },
    {
        "id": "92d71bc19a90ebb7",
        "type": "split",
        "z": "ca03066f6a7451f4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 660,
        "wires": [
            [
                "99f19987a9d79c31",
                "c77d99f6194079d7"
            ]
        ]
    },
    {
        "id": "26f1ad336f82aeeb",
        "type": "link out",
        "z": "ca03066f6a7451f4",
        "name": "",
        "mode": "link",
        "links": [
            "3fdcb94d47bf9bff",
            "72fc070f.39dd8"
        ],
        "x": 1205,
        "y": 680,
        "wires": []
    },
    {
        "id": "0b9b33794e321921",
        "type": "template",
        "z": "ca03066f6a7451f4",
        "name": "BOARD SETUP",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "megabas 0 wdtpwr 60\nmegabas 1 wdtpwr 60",
        "output": "str",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "5fb83c77f77d7cdb"
            ]
        ]
    },
    {
        "id": "5fb83c77f77d7cdb",
        "type": "file",
        "z": "ca03066f6a7451f4",
        "name": "",
        "filename": "/home/pi/node-hiu/sqsetup.sh",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 650,
        "y": 400,
        "wires": [
            [
                "d76edb39ad2c4601"
            ]
        ]
    },
    {
        "id": "62339bb059d4a43b",
        "type": "exec",
        "z": "ca03066f6a7451f4",
        "command": "bash /home/pi/node-hiu/sqsetup.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1080,
        "y": 400,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d76edb39ad2c4601",
        "type": "trigger",
        "z": "ca03066f6a7451f4",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "num",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "62339bb059d4a43b"
            ]
        ]
    },
    {
        "id": "5225132d4929334b",
        "type": "link out",
        "z": "ca03066f6a7451f4",
        "name": "",
        "mode": "link",
        "links": [
            "0632f1bc7ce231b2",
            "38851676a0d913c9"
        ],
        "x": 555,
        "y": 720,
        "wires": []
    },
    {
        "id": "2e988386940749d8",
        "type": "debug",
        "z": "ca03066f6a7451f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 520,
        "wires": []
    },
    {
        "id": "da443342a3ee7581",
        "type": "rbe",
        "z": "ca03066f6a7451f4",
        "name": "",
        "func": "deadbandEq",
        "gap": "0.1",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 960,
        "y": 680,
        "wires": [
            [
                "11ef8c40cb8707eb"
            ]
        ]
    },
    {
        "id": "95e237adbbb4b523",
        "type": "inject",
        "z": "ca03066f6a7451f4",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1020,
        "y": 620,
        "wires": [
            [
                "da443342a3ee7581",
                "e38c98b2bbcdae42"
            ]
        ]
    },
    {
        "id": "11ef8c40cb8707eb",
        "type": "switch",
        "z": "ca03066f6a7451f4",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 680,
        "wires": [
            [
                "26f1ad336f82aeeb"
            ]
        ]
    },
    {
        "id": "4dc151ca46e90967",
        "type": "comment",
        "z": "ca03066f6a7451f4",
        "name": "Building Automation Hat Commands",
        "info": "     -v              Display the megabas command version number\n        -h              Display the list of command options or one command option details\n        -warranty       Display the warranty\n        -list:          List all megabas boards connected\n                        return the # of boards and stack level for every board\n        board           Display the board status and firmware version number\n        trwr:           Set triacs (AC switch) On/Off\n        trrd:           Read triacs (AC switch) status\n        trtest:         Turn ON and OFF the triacs until press a key\n        contactrd:      Read dry contact status\n                        Warning: For this measurements to be valid place the jumper in position \"1K\"\n        countrd:        Read dry contact transitions count\n                        Warning: For this measurements to be valid place the jumper in position \"1K\"\n        countrst:       Reset dry contact transitions count\n        edgerd:         Read dry contact transitions type, ret 0 - disable, 1 - rising, 2 - falling, 3 -both\n        edgewr:         Write dry contact transitions type: 0 - disable, 1 - rising, 2 - falling, 3 - bot                                  h\n        dacrd:          Read DAC voltage value (0 - 10V)\n        dacwr:          Write DAC output voltage value (0..10V)\n        adcrd:          Read ADC input voltage value (0 - 10V)\n                        Warning: For this measurements to be valid place the jumper in position \"0-10V\"\n        r1krd:          Read resistor input  value (1k) in kiloOhms, Warning: You must palce the jumper in position \"1K\".\n                        Return 30kOhm for resistor out of range\n        r10krd:         Read resistor input  value (10k) in kiloOhms, Warning: You must palce the jumper in position \"10K\".\n                        Return 30kOhm for resistor out of range\n        adccal:         Calibrate one ADC channel, the calibration must be done in 2 points at min 5V apart\n        adccalrst:      Reset the calibration for one ADC channel\n        daccal:         Calibrate one DAC channel, the calibration must be done in 2 points at min 5V apart\n        daccalrst:      Reset calibration for one DAC channel\n        wdtr:           Reload the watchdog timer and enable the watchdog if is disabled\n        wdtpwr:         Set the watchdog period in seconds,\n                        reload command must be issue in this interval to prevent Raspberry Pi power off\n        wdtprd:         Get the watchdog period in seconds,\n                        reload command must be issue in this interval to prevent Raspberry Pi power off\n        wdtipwr:        Set the watchdog initial period in seconds,\n                        This period is loaded after power cycle, giving Raspberry time to boot\n        wdtiprd:        Get the watchdog initial period in seconds.\n                        This period is loaded after power cycle, giving Raspberry time to boot\n        wdtopwr:        Set the watchdog off period in seconds (max 48 days).\n                        This is the time that watchdog mantain Raspberry turned off\n        wdtoprd:        Get the watchdog off period in seconds (max 48 days)\n                        This is the time that watchdog mantain Raspberry turned off\n        rs485rd:        Read the RS485 communication settings\n        rs485wr:        Write the RS485 communication settings\n        rtcrd:          Get the internal RTC  date and time(mm/dd/yy hh:mm:ss)\n        rtcwr:          Set the internal RTC  date and time(mm/dd/yy hh:mm:ss)\n",
        "x": 220,
        "y": 60,
        "wires": []
    },
    {
        "id": "8920b47930855b75",
        "type": "comment",
        "z": "ca03066f6a7451f4",
        "name": "Building Automation Hat ",
        "info": "https://sequentmicrosystems.com/collections/industrial-automation/products/raspberry-pi-building-automation",
        "x": 500,
        "y": 60,
        "wires": []
    },
    {
        "id": "c77d99f6194079d7",
        "type": "debug",
        "z": "ca03066f6a7451f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 600,
        "wires": []
    },
    {
        "id": "05f98b9c86ec5f69",
        "type": "template",
        "z": "ca03066f6a7451f4",
        "name": "SENSORS",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# device, varkey, command, title\necho \"sensors\", \"tB1IN1\", $(megabas 0 r10krd 1), \"Temp Board 1 Sensor 1\"\necho \"sensors\", \"tB1IN2\", $(megabas 0 r10krd 2), \"Temp Board 1 Sensor 2\"\necho \"sensors\", \"tB1IN3\", $(megabas 0 r10krd 3), \"Temp Board 1 Sensor 3\"\necho \"sensors\", \"tB1IN4\", $(megabas 0 r10krd 4), \"Temp Board 1 Sensor 4\"\necho \"sensors\", \"tB1IN5\", $(megabas 0 r10krd 5), \"Temp Board 1 Sensor 5\"\necho \"sensors\", \"tB1IN6\", $(megabas 0 r10krd 6), \"Temp Board 1 Sensor 6\"\necho \"sensors\", \"tB1IN7\", $(megabas 0 r10krd 7), \"Temp Board 1 Sensor 7\"\necho \"sensors\", \"tB1IN8\", $(megabas 0 r10krd 8), \"Temp Board 1 Sensor 8\"\necho \"sensors\", \"tB2IN1\", $(megabas 1 r10krd 1), \"Temp Board 2 Sensor 1\"\necho \"sensors\", \"tB2IN2\", $(megabas 1 r10krd 2), \"Temp Board 2 Sensor 2\"\necho \"sensors\", \"tB2IN3\", $(megabas 1 r10krd 3), \"Temp Board 2 Sensor 3\"\necho \"sensors\", \"tB2IN4\", $(megabas 1 r10krd 4), \"Temp Board 2 Sensor 4\"\necho \"sensors\", \"tB2IN5\", $(megabas 1 r10krd 5), \"Temp Board 2 Sensor 5\"\necho \"sensors\", \"tB2IN6\", $(megabas 1 r10krd 6), \"Temp Board 2 Sensor 6\"\necho \"sensors\", \"tRPS\", $(megabas 1 adcrd 7), \"RPS Temperature\"\necho \"sensors\", \"pRPS\", $(megabas 1 adcrd 8), \"RPS Pressure\"",
        "output": "str",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "11c03d3cbc04923d"
            ]
        ]
    },
    {
        "id": "301ee1a1ec6f3074",
        "type": "template",
        "z": "ca03066f6a7451f4",
        "name": "WATCHDOGS",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "megabas 0 wdtr\nmegabas 1 wdtr",
        "output": "str",
        "x": 400,
        "y": 320,
        "wires": [
            [
                "69e19411dbc48dd4"
            ]
        ]
    },
    {
        "id": "69e19411dbc48dd4",
        "type": "file",
        "z": "ca03066f6a7451f4",
        "name": "",
        "filename": "/home/pi/node-hiu/sq2.sh",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 690,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "73eb8679965c1672",
        "type": "trigger",
        "z": "ca03066f6a7451f4",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 230,
        "y": 820,
        "wires": [
            [
                "b5726b628ee3e61b"
            ]
        ]
    },
    {
        "id": "b5726b628ee3e61b",
        "type": "exec",
        "z": "ca03066f6a7451f4",
        "command": "bash /home/pi/node-hiu/sq2.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "sq2.sh",
        "x": 390,
        "y": 820,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "119c833c97aaa8ef",
        "type": "delay",
        "z": "ca03066f6a7451f4",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 760,
        "wires": [
            [
                "73eb8679965c1672"
            ]
        ]
    },
    {
        "id": "c0239bb42b5616f9",
        "type": "inject",
        "z": "ca03066f6a7451f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "301ee1a1ec6f3074",
                "0b9b33794e321921",
                "05f98b9c86ec5f69"
            ]
        ]
    },
    {
        "id": "497a42acf94e3206",
        "type": "debug",
        "z": "ca03066f6a7451f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 560,
        "wires": []
    },
    {
        "id": "40855875df672fcf",
        "type": "debug",
        "z": "ca03066f6a7451f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 740,
        "wires": []
    },
    {
        "id": "e38c98b2bbcdae42",
        "type": "rbe",
        "z": "ca03066f6a7451f4",
        "d": true,
        "name": "",
        "func": "deadbandEq",
        "gap": "10",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 960,
        "y": 720,
        "wires": [
            [
                "11ef8c40cb8707eb"
            ]
        ]
    },
    {
        "id": "10ffa87d11be0bce",
        "type": "mqtt out",
        "z": "ca03066f6a7451f4",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7ad2997b.42a908",
        "x": 1090,
        "y": 180,
        "wires": []
    },
    {
        "id": "49608d86828c05de",
        "type": "function",
        "z": "ca03066f6a7451f4",
        "name": "_/",
        "func": "msg.topic = \"_/\" + msg.topic;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 180,
        "wires": [
            [
                "10ffa87d11be0bce"
            ]
        ]
    },
    {
        "id": "18afff5e549373d7",
        "type": "exec",
        "z": "f7fb808af6ec3dfd",
        "command": "sudo dhclient -v usb0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 420,
        "y": 160,
        "wires": [
            [
                "f18faedff4608452"
            ],
            [
                "f18faedff4608452"
            ],
            []
        ]
    },
    {
        "id": "72e5a4e6d3081397",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "18afff5e549373d7"
            ]
        ]
    },
    {
        "id": "f18faedff4608452",
        "type": "debug",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "457f51b98fc5e740",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "d580f1742a4d2839"
            ]
        ]
    },
    {
        "id": "d580f1742a4d2839",
        "type": "exec",
        "z": "f7fb808af6ec3dfd",
        "command": "ifconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 380,
        "y": 280,
        "wires": [
            [
                "cd3abe1c29f4fdc5"
            ],
            [
                "eb1452782441974d"
            ],
            []
        ]
    },
    {
        "id": "eb1452782441974d",
        "type": "debug",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 280,
        "wires": []
    },
    {
        "id": "cd3abe1c29f4fdc5",
        "type": "split",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "splt": "\\n\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 260,
        "wires": [
            [
                "eb1452782441974d",
                "9663cf0dd586e7e6"
            ]
        ]
    },
    {
        "id": "db41a969834b404f",
        "type": "serial in",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "serial": "07c35ea8fb94a2fc",
        "x": 290,
        "y": 440,
        "wires": [
            [
                "2abbac7c95ae1f92",
                "7aed6888abbbe51c",
                "4b018fbdb0482ffd"
            ]
        ]
    },
    {
        "id": "fb14f7649c773f6b",
        "type": "serial out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "serial": "07c35ea8fb94a2fc",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "2abbac7c95ae1f92",
        "type": "debug",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 500,
        "wires": []
    },
    {
        "id": "d8dfcfe85623cd74",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AT",
        "payloadType": "str",
        "x": 270,
        "y": 560,
        "wires": [
            [
                "ac4ff2763c6da88e"
            ]
        ]
    },
    {
        "id": "ac4ff2763c6da88e",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CSQ",
        "func": "msg.payload = \"AT+CSQ\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 560,
        "wires": [
            [
                "188d6e8d1db59bdd"
            ]
        ]
    },
    {
        "id": "c6ccf88dca3fc137",
        "type": "ui_text_input",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "b77843a6.57d18",
        "order": 4,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": "500",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 880,
        "y": 820,
        "wires": [
            [
                "3213253672ba4bc6"
            ]
        ]
    },
    {
        "id": "e6df19c15d1eab7f",
        "type": "ui_template",
        "z": "f7fb808af6ec3dfd",
        "group": "b77843a6.57d18",
        "name": "Virtual Keyboard",
        "order": 2,
        "width": "6",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "3247b2239d28a34f",
        "type": "ui_text",
        "z": "f7fb808af6ec3dfd",
        "group": "b77843a6.57d18",
        "order": 6,
        "width": "12",
        "height": "1",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 650,
        "y": 360,
        "wires": []
    },
    {
        "id": "98a6816266f7a422",
        "type": "ui_button",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "group": "b77843a6.57d18",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Send",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "atcmd",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "ba8bc239a8664a4b"
            ]
        ]
    },
    {
        "id": "3213253672ba4bc6",
        "type": "change",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "atcmd",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5a93fc1784d90de1",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "r n",
        "func": "msg.payload = msg.payload + \"\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 760,
        "wires": [
            [
                "188d6e8d1db59bdd"
            ]
        ]
    },
    {
        "id": "ae71c117dece5339",
        "type": "ui_dropdown",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b77843a6.57d18",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Hello",
                "value": "AT",
                "type": "str"
            },
            {
                "label": "OK?",
                "value": "AT+CPSI?",
                "type": "str"
            },
            {
                "label": "Activate Modem",
                "value": "AT+CUSBPIDSWITCH=9011,1,1",
                "type": "str"
            },
            {
                "label": "Modem Setup",
                "value": "INSTALL",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 780,
        "y": 880,
        "wires": [
            [
                "c6ccf88dca3fc137"
            ]
        ]
    },
    {
        "id": "7aed6888abbbe51c",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 490,
        "y": 360,
        "wires": [
            [
                "3247b2239d28a34f"
            ]
        ]
    },
    {
        "id": "9663cf0dd586e7e6",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "func": "\nvar iface = msg.payload.split(\":\")[0]\n\nif (iface !== \"usb0\") { return null; }\n\nvar lines = msg.payload.split(\"\\n\");\n\nvar direc,ltype;\n\nvar oot = [];\n\nvar megabytesTotal = 0\n\n\n\nfor (var l in lines) {\n    \n    direct=\"\";\n    ltype=\"\";\n    var ootl = {};\n     \n    lines[l]=lines[l].trim(); \n     \n    if (lines[l].indexOf(\"RX\")>-1) { direc = \"RX\"; }\n    else if (lines[l].indexOf(\"TX\")>-1) { direc = \"TX\"; }\n    \n    if (direc==\"\") { continue; }\n    \n    if (lines[l].indexOf(\"bytes\")>-1) { \n        \n        ltype = \"megabytes\"; \n        ootl.payload = parseFloat(lines[l].split(\"bytes \")[1].split(\" \")[0]) / 1000000;\n        megabytesTotal = megabytesTotal + ootl.payload;\n        \n    }\n    else if (lines[l].indexOf(\"errors\")>-1) { \n        \n        ltype = \"errors\"; \n        ootl.payload = parseFloat(lines[l].split(\"errors \")[1].split(\" \")[0]);\n    }\n    \n    if (ltype==\"\") { continue; }\n    \n   \n    ootl.topic = \"modem/\" + ltype + direc;\n    oot.push(ootl);\n    \n    \n}\n\noot.push({\"topic\":\"modem/megabytesTotal\", \"payload\":megabytesTotal});\n\nvar megabytesPM = parseInt(1000000 * (megabytesTotal - (flow.get(\"mblast\") || megabytesTotal))) / 1000000;\nflow.set(\"mblast\",megabytesTotal);\noot.push({\"topic\":\"modem/megabytesPM\", \"payload\":megabytesPM});\noot.push({\"topic\":\"modem/kbps\", \"payload\":parseInt(1000000 * megabytesPM / 60)/1000});\n\nmsg.payload = oot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            [
                "6e1c8b2c9ba19b80"
            ]
        ]
    },
    {
        "id": "0363247e5746ad9e",
        "type": "debug",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 360,
        "wires": []
    },
    {
        "id": "6e1c8b2c9ba19b80",
        "type": "split",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 920,
        "y": 320,
        "wires": [
            [
                "57fd0078ccdc1fd3"
            ]
        ]
    },
    {
        "id": "57fd0078ccdc1fd3",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "func": "msg = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "0363247e5746ad9e",
                "a3897f36b4cb5d73",
                "2ac6a4531a46aa0b"
            ]
        ]
    },
    {
        "id": "a3897f36b4cb5d73",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1195,
        "y": 300,
        "wires": []
    },
    {
        "id": "4b018fbdb0482ffd",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "func": "\nflow.set(\"lastUSBin\", new Date().getTime());\n\nvar oot = [];\n\nif (msg.payload.indexOf(\"AT+CIMI\")>-1) {\n    \n    //msg.topic = \"modem/simIMSI\";\n    //msg.payload = msg.payload.split(\"AT+CIMI\")[1].split(\"\\n\")[1].trim();\n    oot.push({\"topic\":\"modem/simIMSI\", \"payload\":msg.payload.split(\"AT+CIMI\")[1].split(\"\\n\")[1].trim()});\n}\n\nelse if (msg.payload.indexOf(\"+CPSI:\")>-1) {\n    \n    //<System Mode>,<Operation Mode>,<MCC>-<MNC>,<TAC>,\n    //<SCellID>,<PCellID>,<Frequency Band>,<earfcn>,<dlbw>,\n    //<ulbw>,<RSRQ>,<RSRP>,<RSSI>,<RSSNR>\n    \n    if (msg.payload.indexOf(\"LTE\")>-1) {\n        \n        flow.set(\"online\",\"1\");\n        \n        var flds = msg.payload.split(\"CPSI:\")[1].trim().split(\",\");\n        \n        oot.push({\"topic\":\"modem/sysMode\", \"payload\":flds[0]});\n        oot.push({\"topic\":\"modem/opMode\", \"payload\":flds[1]});\n        oot.push({\"topic\":\"modem/MCC-MNC\", \"payload\":flds[2]});\n        oot.push({\"topic\":\"modem/TAC\", \"payload\":flds[3]});\n        oot.push({\"topic\":\"modem/SCellID\", \"payload\":flds[4]});\n        oot.push({\"topic\":\"modem/PCellID\", \"payload\":flds[5]});\n        oot.push({\"topic\":\"modem/frqBand\", \"payload\":flds[6]});\n        oot.push({\"topic\":\"modem/earfcn\", \"payload\":flds[7]});\n        oot.push({\"topic\":\"modem/dlbw\", \"payload\":flds[8]});\n        oot.push({\"topic\":\"modem/ulbw\", \"payload\":flds[9]});\n        oot.push({\"topic\":\"modem/RSRQ\", \"payload\":flds[10]});\n        oot.push({\"topic\":\"modem/RSRP\", \"payload\":parseInt(flds[11])/10});\n        oot.push({\"topic\":\"modem/RSSI\", \"payload\":flds[12]});\n        oot.push({\"topic\":\"modem/RSSNR\", \"payload\":flds[13].split(\"\\r\")[0]});\n        \n        var xpSignal = parseInt(140 + (parseInt(flds[11])/10));\n        \n        oot.push({\"topic\":\"system/signalGSM\", \"payload\":xpSignal});\n        \n        \n    }\n    else { flow.set(\"online\",\"0\"); }\n}\n\nif (oot.length<1) { return null; }\n\nmsg.payload = oot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 440,
        "wires": [
            [
                "2d8163af1857c77e",
                "6e1c8b2c9ba19b80"
            ]
        ]
    },
    {
        "id": "2d8163af1857c77e",
        "type": "debug",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 440,
        "wires": []
    },
    {
        "id": "34fb14bd301b745d",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "23",
        "topic": "",
        "payload": "AT",
        "payloadType": "str",
        "x": 270,
        "y": 620,
        "wires": [
            [
                "8af54b7140236bc2"
            ]
        ]
    },
    {
        "id": "8af54b7140236bc2",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CIMI",
        "func": "msg.payload = \"AT+CIMI\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 620,
        "wires": [
            [
                "188d6e8d1db59bdd"
            ]
        ]
    },
    {
        "id": "81310b0590f43aba",
        "type": "link in",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "af6ed0a2.3108e",
            "57951fb3.4ee4",
            "9abe6fd2.97b23"
        ],
        "x": 315,
        "y": 840,
        "wires": [
            [
                "2fa6d24c4903419c",
                "838d0e604cd5ab48"
            ]
        ]
    },
    {
        "id": "2fa6d24c4903419c",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CRESET",
        "func": "msg.payload = \"AT+CRESET\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "188d6e8d1db59bdd"
            ]
        ]
    },
    {
        "id": "a614ec350015cd32",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "56",
        "topic": "",
        "payload": "AT",
        "payloadType": "str",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "f125196c63163f4f"
            ]
        ]
    },
    {
        "id": "f125196c63163f4f",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CPSI?",
        "func": "msg.payload = \"AT+CPSI?\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 680,
        "wires": [
            [
                "f3a0269ef0732973"
            ]
        ]
    },
    {
        "id": "188d6e8d1db59bdd",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 840,
        "y": 620,
        "wires": [
            [
                "fb14f7649c773f6b",
                "88be147928dadefc"
            ]
        ]
    },
    {
        "id": "2ac6a4531a46aa0b",
        "type": "switch",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "signalGSM",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "kbps",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "1a74481e0e8eb2ec",
                "684b90ba8f894320"
            ],
            [
                "684b90ba8f894320"
            ]
        ]
    },
    {
        "id": "1a74481e0e8eb2ec",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "9189a361.6d051",
            "26b0c09f.0e9e2"
        ],
        "x": 1215,
        "y": 160,
        "wires": []
    },
    {
        "id": "684b90ba8f894320",
        "type": "ui_chart",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "group": "b77843a6.57d18",
        "order": 7,
        "width": "12",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#e91c1c",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c242700942ee7b03",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CUSBPIDSWITCH=9011,1,1",
        "func": "flow.set(\"pleasewait\",\"0\");\nmsg.payload = \"AT+CUSBPIDSWITCH=9011,1,1\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1420,
        "wires": [
            [
                "dbafd52736b456cc"
            ]
        ]
    },
    {
        "id": "4c27d6612a4a09f2",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1500,
        "wires": [
            [
                "fa43a426e06f2ca5"
            ]
        ]
    },
    {
        "id": "dbafd52736b456cc",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "mode": "link",
        "links": [
            "7235b73df778d84e",
            "39f3596dbd265d3c",
            "0419869663aa8793"
        ],
        "x": 1115,
        "y": 1260,
        "wires": []
    },
    {
        "id": "144342ae23a3d155",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "5c4cda7ae49ae54f"
            ]
        ]
    },
    {
        "id": "bc41bef38fb2a72f",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "580fb085d472796e",
                "9060c4ad4c1e6ac0"
            ]
        ]
    },
    {
        "id": "580fb085d472796e",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CGDCONT=1,\"IPV4V6\",\"wsim\"",
        "func": "flow.set(\"pleasewait\",\"1\");\nmsg.payload = 'AT+CGDCONT=1,\"IPV4V6\",\"wsim\"\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1200,
        "wires": [
            [
                "dbafd52736b456cc"
            ]
        ]
    },
    {
        "id": "e9d99b70e6bb5698",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CGDCONT=6,\"IPV4V6\",\"wsim\"",
        "func": "msg.payload = 'AT+CGDCONT=6,\"IPV4V6\",\"wsim\"\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1240,
        "wires": [
            [
                "dbafd52736b456cc"
            ]
        ]
    },
    {
        "id": "de82cc59492ec473",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CFUN=0",
        "func": "msg.payload = 'AT+CFUN=0\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1320,
        "wires": [
            [
                "dbafd52736b456cc"
            ]
        ]
    },
    {
        "id": "61104f2b9ed6b4c4",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CGAUTH=1,1,”user”,”pass”",
        "func": "msg.payload = 'AT+CGAUTH=1,1,”user”,”pass”\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1280,
        "wires": [
            [
                "dbafd52736b456cc"
            ]
        ]
    },
    {
        "id": "81dd18ba1661c8a9",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CFUN=1",
        "func": "msg.payload = 'AT+CFUN=1\\r\\n'\n\nflow.set(\"pleasewait\",\"0\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1360,
        "wires": [
            [
                "dbafd52736b456cc"
            ]
        ]
    },
    {
        "id": "9060c4ad4c1e6ac0",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1240,
        "wires": [
            [
                "e9d99b70e6bb5698",
                "d0252a16d4faaea8"
            ]
        ]
    },
    {
        "id": "b5058f7be1f8f6e8",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1320,
        "wires": [
            [
                "de82cc59492ec473",
                "8dd101b3f61972b2"
            ]
        ]
    },
    {
        "id": "d0252a16d4faaea8",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1280,
        "wires": [
            [
                "61104f2b9ed6b4c4",
                "b5058f7be1f8f6e8"
            ]
        ]
    },
    {
        "id": "8dd101b3f61972b2",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1360,
        "wires": [
            [
                "81dd18ba1661c8a9",
                "3324dbe196b282c8"
            ]
        ]
    },
    {
        "id": "0419869663aa8793",
        "type": "link in",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "dbafd52736b456cc",
            "440b8c6c5f6627a5",
            "7de6aedc7e614b36",
            "1b13ac257ae8ed21"
        ],
        "x": 595,
        "y": 820,
        "wires": [
            [
                "188d6e8d1db59bdd",
                "c6ccf88dca3fc137"
            ]
        ]
    },
    {
        "id": "ba8bc239a8664a4b",
        "type": "switch",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "INSTALL",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 740,
        "wires": [
            [
                "30228a2a3de580f6"
            ],
            [
                "5a93fc1784d90de1",
                "76bc0939e523627d"
            ]
        ]
    },
    {
        "id": "c678207f5a109d11",
        "type": "link in",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "30228a2a3de580f6"
        ],
        "x": 215,
        "y": 1080,
        "wires": [
            [
                "666ee63d4103dbef"
            ]
        ]
    },
    {
        "id": "30228a2a3de580f6",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "mode": "link",
        "links": [
            "c678207f5a109d11"
        ],
        "x": 395,
        "y": 720,
        "wires": []
    },
    {
        "id": "44f9b990821792ad",
        "type": "ui_toast",
        "z": "f7fb808af6ec3dfd",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 530,
        "y": 1080,
        "wires": [
            [
                "2345d226a89ae3c7"
            ]
        ]
    },
    {
        "id": "666ee63d4103dbef",
        "type": "change",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Run Modem Setup Script ?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1080,
        "wires": [
            [
                "44f9b990821792ad"
            ]
        ]
    },
    {
        "id": "2345d226a89ae3c7",
        "type": "switch",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 1080,
        "wires": [
            [
                "5c4cda7ae49ae54f"
            ]
        ]
    },
    {
        "id": "a56e9d1ee4d1a6c3",
        "type": "change",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pleasewait",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "76bc0939e523627d",
        "type": "trigger",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 230,
        "y": 960,
        "wires": [
            [
                "a56e9d1ee4d1a6c3"
            ]
        ]
    },
    {
        "id": "f3a0269ef0732973",
        "type": "switch",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "property": "pleasewait",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 680,
        "wires": [
            [
                "188d6e8d1db59bdd"
            ]
        ]
    },
    {
        "id": "3324dbe196b282c8",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1420,
        "wires": [
            [
                "c242700942ee7b03",
                "4c27d6612a4a09f2"
            ]
        ]
    },
    {
        "id": "fa43a426e06f2ca5",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "mode": "link",
        "links": [
            "beb83274c8bcddc0",
            "b5da176f6a494805"
        ],
        "x": 655,
        "y": 1500,
        "wires": []
    },
    {
        "id": "b5da176f6a494805",
        "type": "link in",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "fa43a426e06f2ca5"
        ],
        "x": 255,
        "y": 100,
        "wires": [
            [
                "18afff5e549373d7"
            ]
        ]
    },
    {
        "id": "a8775db8164ae2ab",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "AT+CUSBPIDSWITCH=9011,1,1",
        "func": "flow.set(\"pleasewait\",\"1\");\nmsg.payload = \"AT+CUSBPIDSWITCH=9011,1,1\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 80,
        "wires": [
            [
                "1b13ac257ae8ed21"
            ]
        ]
    },
    {
        "id": "1b13ac257ae8ed21",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "mode": "link",
        "links": [
            "7235b73df778d84e",
            "39f3596dbd265d3c",
            "0419869663aa8793"
        ],
        "x": 1215,
        "y": 80,
        "wires": []
    },
    {
        "id": "82962db8cbbfdfb3",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "Check we have data connection",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "70",
        "topic": "",
        "payloadType": "date",
        "x": 520,
        "y": 80,
        "wires": [
            [
                "5f3a83a6c9d20788"
            ]
        ]
    },
    {
        "id": "5f3a83a6c9d20788",
        "type": "switch",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "property": "mblast",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 80,
        "wires": [
            [
                "a8775db8164ae2ab"
            ]
        ]
    },
    {
        "id": "2f78df4d7b4c71f1",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 800,
        "wires": [
            [
                "2fa6d24c4903419c"
            ]
        ]
    },
    {
        "id": "f8c3f49e15657a5a",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "WATCHDOG",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "120",
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "2991d393b14c7b2d"
            ]
        ]
    },
    {
        "id": "2991d393b14c7b2d",
        "type": "switch",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "property": "online",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "63b29f0113dfa8b2"
            ]
        ]
    },
    {
        "id": "63b29f0113dfa8b2",
        "type": "trigger",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "30",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 230,
        "y": 1380,
        "wires": [
            [
                "bc41bef38fb2a72f"
            ]
        ]
    },
    {
        "id": "5c4cda7ae49ae54f",
        "type": "change",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pleasewait",
                "pt": "flow",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1160,
        "wires": [
            [
                "bc41bef38fb2a72f"
            ]
        ]
    },
    {
        "id": "a7d0367a98a2e312",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 950,
        "y": 500,
        "wires": [
            [
                "845e7ef3f4bed77e"
            ]
        ]
    },
    {
        "id": "db32607d56940241",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1315,
        "y": 500,
        "wires": []
    },
    {
        "id": "bee89ed3410ddd1f",
        "type": "debug",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 420,
        "wires": []
    },
    {
        "id": "845e7ef3f4bed77e",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "alarms",
        "func": "var lastUSBin = flow.get(\"lastUSBin\") || 0;\n\nvar timin = new Date().getTime();\n\n\n\n\nvar age = (timin - lastUSBin)/1000;\n\nmsg.topic = \"alarm/modemUSB\";\nmsg.title = \"Modem USB serial connection\";\nif (age < 90) { msg.payload = \"ok\"; }\nelse { msg.payload = \"No modem response\"; }\n\n\nvar msg2 = {};\nmsg2.topic = \"alarm/modemLTE\";\nmsg2.title = \"Modem LTE 4G connection\";\n\nif (msg.payload !== \"ok\") { \n    \n    msg2.payload = \"No modem response\";  \n    \n    var sysage = (timin - flow.get(\"starttime\"))/1000;\n    if (sysage < 900) {\n        return [msg,msg2,null];\n        \n    } else {\n        msg2.topic = \"alarm/modemLTE\";\n        msg2.payload = \"Rebooting System\";\n        return [msg,msg2,msg2];\n    } \n}\n\nelse if (flow.get(\"online\")==\"0\") { msg2.payload = \"No LTE connection\"; }\n\nelse { msg2.payload = \"ok\"; global.set(\"rebooting\",null); }\n    \nreturn [msg,msg2,null];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "db32607d56940241",
                "bee89ed3410ddd1f"
            ],
            [
                "db32607d56940241",
                "bee89ed3410ddd1f"
            ],
            [
                "bee89ed3410ddd1f",
                "1bda836d9f35d5d1"
            ]
        ]
    },
    {
        "id": "04bc705ed6065b7a",
        "type": "inject",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 900,
        "y": 560,
        "wires": [
            [
                "5249ed4114a7dfa0"
            ]
        ]
    },
    {
        "id": "5249ed4114a7dfa0",
        "type": "change",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "starttime",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "9e0bfe87aedfa861",
        "type": "exec",
        "z": "f7fb808af6ec3dfd",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1520,
        "y": 560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "1bda836d9f35d5d1",
        "type": "delay",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 560,
        "wires": [
            [
                "9e0bfe87aedfa861"
            ]
        ]
    },
    {
        "id": "88be147928dadefc",
        "type": "debug",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 720,
        "wires": []
    },
    {
        "id": "838d0e604cd5ab48",
        "type": "function",
        "z": "f7fb808af6ec3dfd",
        "name": "resetModemCount",
        "func": "msg.topic = \"set/resetModemCount\";\nmsg.title = \"No Internet Reset Modem Counter\";\n\nmsg.payload = global.get(\"settings.resetModemCount.value\") || 0;\n\nmsg.payload = parseInt(msg.payload) + 1;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 900,
        "wires": [
            [
                "b49c3f37c8f9bebd"
            ]
        ]
    },
    {
        "id": "b49c3f37c8f9bebd",
        "type": "link out",
        "z": "f7fb808af6ec3dfd",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 615,
        "y": 900,
        "wires": []
    },
    {
        "id": "61ada898.7707e8",
        "type": "ui_template",
        "z": "f7fb808af6ec3dfd",
        "group": "b77843a6.57d18",
        "name": "header icons",
        "order": 1,
        "width": "6",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        //console.log('Position 1');\n        //console.dir(scope);\n        //console.log(scope.msg);\n        scope.$watch('msg.payload', function(data) {\n            //console.log('Position 2');\n            //console.dir(data);\n            //alert(data);\n            instr = data;\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 270,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1773a9ee27c1bdc3",
        "type": "link in",
        "z": "f7fb808af6ec3dfd",
        "name": "link in 2",
        "links": [
            "a42d6f8e421e668f"
        ],
        "x": 145,
        "y": 40,
        "wires": [
            [
                "61ada898.7707e8"
            ]
        ]
    },
    {
        "id": "83ef391a9752a811",
        "type": "link out",
        "z": "e17b925905a37026",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "32c4125311d8d4a0",
            "5a24d1f90f588609"
        ],
        "x": 735,
        "y": 160,
        "wires": []
    },
    {
        "id": "e7105fa51b2a48b7",
        "type": "mqtt in",
        "z": "e17b925905a37026",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": false,
        "inputs": 1,
        "x": 610,
        "y": 160,
        "wires": [
            [
                "83ef391a9752a811",
                "3e3dd1bfabfe85a2"
            ]
        ]
    },
    {
        "id": "3fd4a09df8a3886d",
        "type": "function",
        "z": "e17b925905a37026",
        "name": "InfluxDB",
        "func": "\nvar oot = {};\nvar tags = {};\nvar tops = msg.topic.split(\"/\");\n\n\n\n\nif (!tops[4]) { return null; }\n\nvar net = global.get(\"networkId\") || \"local\";\nnet = (tops[0] == \"local\" ? net : tops[0])\n\ntags.node = tops[1];\ntags.device = tops[2];\ntags.network = net;\ntags.vargroup = tops[3];\ntags.varkey = tops[4];\n\nif (msg.title) { tags.title = msg.title; }\nelse {\n    try { tags.title = global.get(\"readings.local.\" + tops[2] + \".\" + tops[3] + \".\" + tops[4] + \".title\"); }\n    catch { }\n}\n\nvar msg1={};\nmsg1.topic = \"\"+msg.topic;\n\ntry {\n\n    \n\n    if (isNaN(msg.payload)) { msg1.payload = '' + msg.payload  }\n    else { msg1.payload = parseFloat(msg.payload); }\n    \n\n    oot[tops[3] + '_' + tops[4]] = msg1.payload;\n\n    msg1.measurement = net + '_' + tops[1] + '_' + tops[2];\n    msg1.payload = [oot, tags];\n\n    return msg1;\n\n\n\n\n} catch { return null; }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 340,
        "wires": [
            [
                "4a8db5e0c68539c7",
                "aa023f71c31646d0"
            ]
        ]
    },
    {
        "id": "90dcfef262eff3a6",
        "type": "subflow:344fa160119932f8",
        "z": "e17b925905a37026",
        "name": "",
        "x": 550,
        "y": 300,
        "wires": [
            [
                "3fd4a09df8a3886d"
            ]
        ]
    },
    {
        "id": "32c4125311d8d4a0",
        "type": "link in",
        "z": "e17b925905a37026",
        "name": "Influx-Out",
        "links": [
            "83ef391a9752a811",
            "adae7e8a.85a74"
        ],
        "x": 235,
        "y": 340,
        "wires": [
            [
                "78d683ad9dd7db8a"
            ]
        ]
    },
    {
        "id": "3e3dd1bfabfe85a2",
        "type": "debug",
        "z": "e17b925905a37026",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 200,
        "wires": []
    },
    {
        "id": "78d683ad9dd7db8a",
        "type": "switch",
        "z": "e17b925905a37026",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/raw/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/dat/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/stat/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/cpu/",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 370,
        "y": 340,
        "wires": [
            [],
            [
                "90dcfef262eff3a6"
            ],
            [
                "90dcfef262eff3a6"
            ],
            [
                "440c701e0058a53a"
            ],
            [
                "21a49855dec6a141"
            ]
        ]
    },
    {
        "id": "21a49855dec6a141",
        "type": "subflow:3bcc1796d56e0e4a",
        "z": "e17b925905a37026",
        "name": "",
        "x": 560,
        "y": 420,
        "wires": [
            [
                "3fd4a09df8a3886d"
            ]
        ]
    },
    {
        "id": "a724489e75cdd9d8",
        "type": "inject",
        "z": "e17b925905a37026",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "7fc46309f1bfefca"
            ]
        ]
    },
    {
        "id": "7fc46309f1bfefca",
        "type": "function",
        "z": "e17b925905a37026",
        "name": "subscriptions",
        "func": "\nmsg.topic = [];\nvar topic = global.get(\"networkId\") + \"/#\";\nmsg.topic.push({\"topic\": topic, \"qos\":0});\n\nmsg.action=\"subscribe\"\nmsg.payload = null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 160,
        "wires": [
            [
                "e7105fa51b2a48b7"
            ]
        ]
    },
    {
        "id": "4a8db5e0c68539c7",
        "type": "influxdb out",
        "z": "e17b925905a37026",
        "influxdb": "a1a40c5149c84832",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "heatweb",
        "bucket": "",
        "x": 920,
        "y": 340,
        "wires": []
    },
    {
        "id": "aa023f71c31646d0",
        "type": "debug",
        "z": "e17b925905a37026",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "440c701e0058a53a",
        "type": "rbe",
        "z": "e17b925905a37026",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "3fd4a09df8a3886d"
            ]
        ]
    }
]